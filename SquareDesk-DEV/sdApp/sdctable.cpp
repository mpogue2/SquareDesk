// -*- mode:c++; indent-tabs-mode:nil; c-basic-offset:3; fill-column:88 -*-

// SD -- square dance caller's helper.
//
//    Copyright (C) 1990-2016  William B. Ackerman.
//
//    This file is part of "Sd".
//
//    ===================================================================
//
//    If you received this file with express permission from the licensor
//    to modify and redistribute it it under the terms of the Creative
//    Commons CC BY-NC-SA 3.0 license, then that license applies.  See
//    http://creativecommons.org/licenses/by-nc-sa/3.0/
//
//    ===================================================================
//
//    Otherwise, the GNU General Public License applies.
//
//    Sd is free software; you can redistribute it and/or modify it
//    under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 3 of the License, or
//    (at your option) any later version.
//
//    Sd is distributed in the hope that it will be useful, but WITHOUT
//    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
//    or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
//    License for more details.
//
//    You should have received a copy of the GNU General Public License,
//    in the file COPYING.txt, along with Sd.  See
//    http://www.gnu.org/licenses/
//
//    ===================================================================
//
//    This is for version 38.

/* This defines the following external variables:
   centers_concept
   heads_concept
   sides_concept
   special_magic
   special_interlocked
   mark_end_of_list
   marker_decline
   marker_concept_mod
   marker_concept_comment
   marker_concept_supercall
   special_piecewise
   special_z
   main_call_lists
   number_of_calls
   calling_level
   concept_descriptor_table
   unsealed_concept_descriptor_table
   concept_fixer_table
   nice_setup_thing_4x4
   nice_setup_thing_3x4
   nice_setup_thing_2x8
   nice_setup_thing_2x6
   nice_setup_thing_1x12
   nice_setup_thing_1x16
   nice_setup_thing_3dmd
   nice_setup_thing_4dmd
   nice_setup_thing_4x6
*/

#include "sd.h"


/* The number (typically 4), appearing just before the level in the items below, is the "concparseflags" word.
  To save space, it is entered numerically rather than symbolically.  Here are the meanings of the various bits:
      Y - If the parse turns out to be ambiguous, don't use this one -- yield to the other one.
      D - Parse directly.  It directs the parser to allow this concept (and similar concepts)
         and the following call to be typed on one line.  One needs to be very careful
         about avoiding ambiguity when setting this flag.
      F - This seems to mean put a comma after this concept, as in
         "boys are stable, swing thru". */

#define Y CONCPARSE_YIELD_IF_AMB
#define D CONCPARSE_PARSE_DIRECT
#define L CONCPARSE_PARSE_L_TYPE
#define F CONCPARSE_PARSE_F_TYPE
#define G CONCPARSE_PARSE_G_TYPE

// These are all gathered here so that, if the format of a concept_descriptor changes,
// it will be easy to fix everything.

const concept_descriptor concept_centers_concept = {
   "centers????", concept_centers_or_ends, 1, l_mainstream, UC_none, selector_centers, false};
const concept_descriptor concept_heads_concept = {
   "HEADS", concept_so_and_so_only, 1, l_mainstream, UC_none, selector_heads, false};
const concept_descriptor concept_sides_concept = {
   "SIDES", concept_so_and_so_only, 1, l_mainstream, UC_none, selector_sides, false};
const concept_descriptor concept_special_magic = {
   "MAGIC DIAMOND,",       concept_magic,             L+D, l_c4a, UC_none, 1};
const concept_descriptor concept_special_interlocked = {
   "INTERLOCKED DIAMOND,", concept_interlocked,       L+D, l_c1, UC_none, 1};
const concept_descriptor concept_mark_end_of_list = {
   "(end)",                 marker_end_of_list,            0, l_dontshow, UC_none};
const concept_descriptor concept_marker_decline = {
   "decline???",           concept_mod_declined,          0, l_dontshow, UC_none};
const concept_descriptor concept_marker_concept_mod = {
   ">>MODIFIED BY<<",      concept_another_call_next_mod, 0, l_dontshow, UC_none, 0, 0};
const concept_descriptor concept_marker_concept_comment = {
   ">>COMMENT<<",          concept_comment,               0, l_dontshow, UC_none};
const concept_descriptor concept_marker_concept_supercall = {
   ">>SUPER<<",            concept_supercall,             0, l_dontshow, UC_none};
const concept_descriptor concept_special_piecewise = {
   ">>SPECIALPIECEWISE<<", concept_meta,                  0, l_dontshow, UC_none, meta_key_piecewise};
const concept_descriptor concept_special_z = {
   ">>SPECIAL_Z<<", concept_misc_distort,                 1, l_dontshow, UC_none, 0, 0, 0, 16+1};



call_with_name **main_call_lists[call_list_extent];
int number_of_calls[call_list_extent];
dance_level calling_level;


const concept_descriptor *concept_descriptor_table;

concept_descriptor conzept::unsealed_concept_descriptor_table[] = {
   {"AS COUPLES",                            concept_tandem,                  D, l_a1,
    UC_cpl, 0, 0,                     0x000, tandem_key_cpls},
   {"TANDEM",                                concept_tandem,                  D, l_c1,
    UC_tnd, 0, 0,                     0x000, tandem_key_tand},
   {"SIAMESE",                               concept_tandem,                  D, l_c1,
    UC_none, 0, 0,                    0x000, tandem_key_siam},

   {"MELDED AS COUPLES",                     concept_tandem,                  D, l_c4,
    UC_none, 0, 0,                    0x008, tandem_key_cpls},
   {"MELDED TANDEM",                         concept_tandem,                  D, l_c4,
    UC_none, 0, 0,                    0x008, tandem_key_tand},

   {"MELDED COUPLES TWOSOME",                concept_tandem,                  D, l_c4,
    UC_none, 0, 0,                    0x018, tandem_key_cpls},
   {"MELDED TANDEM TWOSOME",                 concept_tandem,                  D, l_c4,
    UC_none, 0, 0,                    0x018, tandem_key_tand},

   {"MELDED COUPLES @9/@9 TWOSOME",          concept_frac_tandem,             D, l_c4,
    UC_none, 0, 0,                    0x028, tandem_key_cpls},
   {"MELDED TANDEM @9/@9 TWOSOME",           concept_frac_tandem,             D, l_c4,
    UC_none, 0, 0,                    0x028, tandem_key_tand},

   {"MELDED COUPLES TWOSOME @9/@9 SOLID", concept_frac_tandem,                D, l_c4,
    UC_none, 0, 0,                    0x038, tandem_key_cpls},
   {"MELDED TANDEM TWOSOME @9/@9 SOLID", concept_frac_tandem,                 D, l_c4,
    UC_none, 0, 0,                    0x038, tandem_key_tand},

   {"MELDED PHANTOM AS COUPLES",             concept_tandem,                  D, l_c4,
    UC_none, 0, 0,                    0x004, tandem_key_cpls},
   {"MELDED PHANTOM TANDEM",                 concept_tandem,                  D, l_c4,
    UC_none, 0, 0,                    0x004, tandem_key_tand},

   {"MELDED PHANTOM COUPLES TWOSOME",        concept_tandem,                  D, l_c4,
    UC_none, 0, 0,                    0x014, tandem_key_cpls},
   {"MELDED PHANTOM TANDEM TWOSOME",         concept_tandem,                  D, l_c4,
    UC_none, 0, 0,                    0x014, tandem_key_tand},

   {"MELDED PHANTOM COUPLES @9/@9 TWOSOME",  concept_frac_tandem,             D, l_c4,
    UC_none, 0, 0,                    0x024, tandem_key_cpls},
   {"MELDED PHANTOM TANDEM @9/@9 TWOSOME",   concept_frac_tandem,             D, l_c4,
    UC_none, 0, 0,                    0x024, tandem_key_tand},

   {"MELDED PHANTOM COUPLES TWOSOME @9/@9 SOLID", concept_frac_tandem,        D, l_c4,
    UC_none, 0, 0,                    0x034, tandem_key_cpls},
   {"MELDED PHANTOM TANDEM TWOSOME @9/@9 SOLID", concept_frac_tandem,         D, l_c4,
    UC_none, 0, 0,                    0x034, tandem_key_tand},

   // Same as MELDED SIAMESE; obsolete.
   {"OVERLAPPED SIAMESE",             concept_tandem,                         D, l_c4,
    UC_none, 0, 0,                    0x000, tandem_key_overlap_siam},
   {"MELDED SIAMESE",                 concept_tandem,                         D, l_c4,
    UC_none, 0, 0,                    0x000, tandem_key_overlap_siam},
   {"MELDED SIAMESE TWOSOME",         concept_tandem,                         D, l_c4,
    UC_none, 0, 0,                    0x010, tandem_key_overlap_siam},
   {"MELDED SIAMESE @9/@9 TWOSOME",   concept_frac_tandem,                    D, l_c4,
    UC_none, 0, 0,                    0x020, tandem_key_overlap_siam},
   {"MELDED SIAMESE TWOSOME @9/@9 SOLID", concept_frac_tandem,                D, l_c4,
    UC_none, 0, 0,                    0x030, tandem_key_overlap_siam},

   {"COUPLES OF 3",                          concept_tandem,                  D, l_a1,
    UC_none, 0, 0,                    0x000, tandem_key_cpls3},
   {"TANDEMS OF 3",                          concept_tandem,                  D, l_c1,
    UC_none, 0, 0,                    0x000, tandem_key_tand3},
   {"SIAMESE OF 3",                          concept_tandem,                  D, l_c1,
    UC_none, 0, 0,                    0x000, tandem_key_siam3},
   {"COUPLES OF 4",                          concept_tandem,                  D, l_a1,
    UC_none, 0, 0,                    0x000, tandem_key_cpls4},
   {"TANDEMS OF 4",                          concept_tandem,                  D, l_c1,
    UC_none, 0, 0,                    0x000, tandem_key_tand4},
   {"SIAMESE OF 4",                          concept_tandem,                  D, l_c1,
    UC_none, 0, 0,                    0x000, tandem_key_siam4},
   {"BOXES ARE SOLID",                       concept_tandem,                F+D, l_c2,
    UC_none, 0, 0,                    0x000, tandem_key_box},
   {"DIAMONDS ARE SOLID",                    concept_tandem,                F+D, l_c2,
    UC_none, 0, 0,                    0x000, tandem_key_diamond},
   {"Y's ARE SOLID",                         concept_tandem,                F+D, l_c4,
    UC_none, 0, 0,                    0x000, tandem_key_ys},
   {"SKEW",                                  concept_tandem,                  D, l_c4,
    UC_none, 0, 0,                    0x000, tandem_key_skew},
   {"GRUESOME AS COUPLES",                   concept_gruesome_tandem,         D, l_c4a,
    UC_none, 0, CONCPROP__NEEDK_2X8,  0x002, tandem_key_cpls},
   {"GRUESOME TANDEM",                       concept_gruesome_tandem,         D, l_c4a,
    UC_none, 0, CONCPROP__NEEDK_2X8,  0x002, tandem_key_tand},
   {"@K ARE AS COUPLES",                     concept_some_are_tandem,       F+D, l_a1,
    UC_none, 0, 0,                    0x100, tandem_key_cpls},
   {"@K ARE TANDEM",                         concept_some_are_tandem,       F+D, l_c1,
    UC_none, 0, 0,                    0x100, tandem_key_tand},
   {"@K ARE COUPLES OF 3",                   concept_some_are_tandem,       F+D, l_c1,
    UC_none, 0, 0,                    0x100, tandem_key_cpls3},
   {"@K ARE TANDEMS OF 3",                   concept_some_are_tandem,       F+D, l_c1,
    UC_none, 0, 0,                    0x100, tandem_key_tand3},
   {"THE COUPLES ARE SOLID",                  concept_tandem,               F+D, l_a1,
    UC_none, 0, 0,                    0x200, tandem_key_cpls},
   {"THE TANDEMS ARE SOLID",                  concept_tandem,               F+D, l_c1,
    UC_none, 0, 0,                    0x200, tandem_key_tand},
   {"THE COUPLES OF 3 ARE SOLID",             concept_tandem,               F+D, l_c1,
    UC_none, 0, 0,                    0x200, tandem_key_cpls3},
   {"THE TANDEMS OF 3 ARE SOLID",             concept_tandem,               F+D, l_c1,
    UC_none, 0, 0,                    0x200, tandem_key_tand3},
   {"INSIDE TRIANGLES ARE SOLID",            concept_tandem,                F+D, l_c2,
    UC_none, 0, 0,                    0x000, tandem_key_inside_tgls},
   {"OUTSIDE TRIANGLES ARE SOLID",           concept_tandem,                F+D, l_c2,
    UC_none, 0, 0,                    0x000, tandem_key_outside_tgls},
   {"IN POINT TRIANGLES ARE SOLID",          concept_tandem,                F+D, l_c2,
    UC_none, 0, 0,                    0x000, tandem_key_inpoint_tgls},
   {"OUT POINT TRIANGLES ARE SOLID",         concept_tandem,                F+D, l_c2,
    UC_none, 0, 0,                    0x000, tandem_key_outpoint_tgls},
   {"WAVE-BASED TRIANGLES ARE SOLID",        concept_tandem,                F+D, l_c2,
    UC_none, 0, 0,                    0x000, tandem_key_wave_tgls},
   {"TANDEM-BASED TRIANGLES ARE SOLID",      concept_tandem,                F+D, l_c2,
    UC_none, 0, 0,                    0x000, tandem_key_tand_tgls},
   {"@k-BASED TRIANGLES ARE SOLID",          concept_some_are_tandem,       F+D, l_c2,
    UC_none, 0, 0,                    0x100, tandem_key_anyone_tgls},
   {"3X1 TRIANGLES ARE SOLID",               concept_tandem,                F+D, l_c2,
    UC_none, 0, 0,                    0x000, tandem_key_3x1tgls},
   {"COUPLES @9/@9 TWOSOME",                 concept_frac_tandem,             D, l_c4,
    UC_none, 0, 0,                    0x020, tandem_key_cpls},
   {"TANDEM @9/@9 TWOSOME",                  concept_frac_tandem,             D, l_c4,
    UC_none, 0, 0,                    0x020, tandem_key_tand},
   {"SIAMESE @9/@9 TWOSOME",                 concept_frac_tandem,             D, l_c4,
    UC_none, 0, 0,                    0x020, tandem_key_siam},
   {"COUPLES OF 3 @9/@9 THREESOME",          concept_frac_tandem,             D, l_c4,
    UC_none, 0, 0,                    0x020, tandem_key_cpls3},
   {"TANDEMS OF 3 @9/@9 THREESOME",          concept_frac_tandem,             D, l_c4,
    UC_none, 0, 0,                    0x020, tandem_key_tand3},
   {"SIAMESE OF 3 @9/@9 THREESOME",          concept_frac_tandem,             D, l_c4,
    UC_none, 0, 0,                    0x020, tandem_key_siam3},
   {"COUPLES OF 4 @9/@9 FOURSOME",           concept_frac_tandem,             D, l_c4,
    UC_none, 0, 0,                    0x020, tandem_key_cpls4},
   {"TANDEMS OF 4 @9/@9 FOURSOME",           concept_frac_tandem,             D, l_c4,
    UC_none, 0, 0,                    0x020, tandem_key_tand4},
   {"SIAMESE OF 4 @9/@9 FOURSOME",           concept_frac_tandem,             D, l_c4,
    UC_none, 0, 0,                    0x020, tandem_key_siam4},
   {"BOXES ARE SOLID @9/@9 BOXSOME",         concept_frac_tandem,           F+D, l_c4,
    UC_none, 0, 0,                    0x020, tandem_key_box},
   {"DIAMONDS ARE SOLID @9/@9 DIAMONDSOME",  concept_frac_tandem,           F+D, l_c4,
    UC_none, 0, 0,                    0x020, tandem_key_diamond},
   {"SKEW @9/@9 TWOSOME",                    concept_frac_tandem,             D, l_c4,
    UC_none, 0, 0,                    0x020, tandem_key_skew},
   {"SKEW @9/@9 SKEWSOME",                   concept_frac_tandem,             D, l_c4,
    UC_none, 0, 0,                    0x020, tandem_key_skew},   // Either spelling.
   {"GRUESOME AS COUPLES @9/@9 TWOSOME",     concept_gruesome_frac_tandem,    D, l_c4,
    UC_none, 0, CONCPROP__NEEDK_2X8,  0x022, tandem_key_cpls},
   {"GRUESOME TANDEM @9/@9 TWOSOME",         concept_gruesome_frac_tandem,    D, l_c4,
    UC_none, 0, CONCPROP__NEEDK_2X8,  0x022, tandem_key_tand},
   {"@K ARE COUPLES @9/@9 TWOSOME",          concept_some_are_frac_tandem,  F+D, l_c4,
    UC_none, 0, 0,                    0x120, tandem_key_cpls},
   {"@K ARE TANDEM @9/@9 TWOSOME",           concept_some_are_frac_tandem,  F+D, l_c4,
    UC_none, 0, 0,                    0x120, tandem_key_tand},
   {"@K ARE COUPLES OF 3 @9/@9 THREESOME",   concept_some_are_frac_tandem,  F+D, l_c4,
    UC_none, 0, 0,                    0x120, tandem_key_cpls3},
   {"@K ARE TANDEMS OF 3 @9/@9 THREESOME",   concept_some_are_frac_tandem,  F+D, l_c4,
    UC_none, 0, 0,                    0x120, tandem_key_tand3},
   {"THE COUPLES ARE SOLID @9/@9 TWOSOME",   concept_frac_tandem,           F+D, l_c4,
    UC_none, 0, 0,                    0x220, tandem_key_cpls},
   {"THE TANDEMS ARE SOLID @9/@9 TWOSOME",   concept_frac_tandem,           F+D, l_c4,
    UC_none, 0, 0,                    0x220, tandem_key_tand},
   {"THE COUPLES OF 3 ARE SOLID @9/@9 THREESOME", concept_frac_tandem,      F+D, l_c4,
    UC_none, 0, 0,                    0x220, tandem_key_cpls3},
   {"THE TANDEMS OF 3 ARE SOLID @9/@9 THREESOME", concept_frac_tandem,      F+D, l_c4,
    UC_none, 0, 0,                    0x220, tandem_key_tand3},
   {"INSIDE TRIANGLES ARE SOLID @9/@9 THREESOME",concept_frac_tandem,       F+D, l_c4,
    UC_none, 0, 0,                    0x020, tandem_key_inside_tgls},
   {"OUTSIDE TRIANGLES ARE SOLID @9/@9 THREESOME",concept_frac_tandem,      F+D, l_c4,
    UC_none, 0, 0,                    0x020, tandem_key_outside_tgls},
   {"IN POINT TRIANGLES ARE SOLID @9/@9 THREESOME",concept_frac_tandem,     F+D, l_c4,
    UC_none, 0, 0,                    0x020, tandem_key_inpoint_tgls},
   {"OUT POINT TRIANGLES ARE SOLID @9/@9 THREESOME",concept_frac_tandem,    F+D, l_c4,
    UC_none, 0, 0,                    0x020, tandem_key_outpoint_tgls},
   {"WAVE-BASED TRIANGLES ARE SOLID @9/@9 THREESOME",concept_frac_tandem,   F+D, l_c4,
    UC_none, 0, 0,                    0x020, tandem_key_wave_tgls},
   {"TANDEM-BASED TRIANGLES ARE SOLID @9/@9 THREESOME",concept_frac_tandem, F+D, l_c4,
    UC_none, 0, 0,                    0x020, tandem_key_tand_tgls},
   {"@k-BASED TRIANGLES ARE SOLID @9/@9 THREESOME",concept_some_are_frac_tandem,F+D,l_c4,
    UC_none, 0, 0,                    0x120, tandem_key_anyone_tgls},
   {"3X1 TRIANGLES ARE SOLID @9/@9 TRIANGLESOME",concept_frac_tandem,       F+D, l_c4,
    UC_none, 0, 0,                    0x020, tandem_key_3x1tgls},
   {"Y's ARE SOLID @9/@9 Y-SOME",            concept_frac_tandem,           F+D, l_c4,
    UC_none, 0, 0,                    0x020, tandem_key_ys},

   {"COUPLES TWOSOME",                       concept_tandem,                  D, l_c3a,
    UC_cpl2s, 0, 0,                   0x010, tandem_key_cpls},
   {"TANDEM TWOSOME",                        concept_tandem,                  D, l_c3a,
    UC_tnd2s, 0, 0,                   0x010, tandem_key_tand},
   {"SIAMESE TWOSOME",                       concept_tandem,                  D, l_c3a,
    UC_none, 0, 0,                    0x010, tandem_key_siam},
   {"COUPLES THREESOME",                     concept_tandem,                  D, l_c3a,
    UC_none, 0, 0,                    0x010, tandem_key_cpls3},
   {"TANDEM THREESOME",                      concept_tandem,                  D, l_c3a,
    UC_none, 0, 0,                    0x010, tandem_key_tand3},
   {"SIAMESE THREESOME",                     concept_tandem,                  D, l_c3a,
    UC_none, 0, 0,                    0x010, tandem_key_siam3},
   {"COUPLES FOURSOME",                      concept_tandem,                  D, l_c3a,
    UC_none, 0, 0,                    0x010, tandem_key_cpls4},
   {"TANDEM FOURSOME",                       concept_tandem,                  D, l_c3a,
    UC_none, 0, 0,                    0x010, tandem_key_tand4},
   {"SIAMESE FOURSOME",                      concept_tandem,                  D, l_c3a,
    UC_none, 0, 0,                    0x010, tandem_key_siam4},
   {"BOXSOME",                               concept_tandem,                F+D, l_c4a,
    UC_none, 0, 0,                    0x010, tandem_key_box},
   {"DIAMONDSOME",                           concept_tandem,                F+D, l_c4a,
    UC_none, 0, 0,                    0x010, tandem_key_diamond},
   {"Y-SOME",                                concept_tandem,                F+D, l_c4,
    UC_none, 0, 0,                    0x010, tandem_key_ys},
   {"SKEWSOME",                              concept_tandem,                  D, l_c4,
    UC_none, 0, 0,                    0x010, tandem_key_skew},
   {"GRUESOME TWOSOME",                      concept_gruesome_tandem,         D, l_c4a,
    UC_none, 0, CONCPROP__NEEDK_2X8,  0x013, tandem_key_cpls},
   {"GRUESOME COUPLES TWOSOME",              concept_gruesome_tandem,         D, l_c4a,
    UC_none, 0, CONCPROP__NEEDK_2X8,  0x012, tandem_key_cpls},
   {"GRUESOME TANDEM TWOSOME",               concept_gruesome_tandem,         D, l_c4a,
    UC_none, 0, CONCPROP__NEEDK_2X8,  0x012, tandem_key_tand},
   {"@K ARE COUPLES TWOSOME",                concept_some_are_tandem,       F+D, l_c3,
    UC_none, 0, 0,                    0x110, tandem_key_cpls},
   {"@K ARE TANDEM TWOSOME",                 concept_some_are_tandem,       F+D, l_c3a,
    UC_none, 0, 0,                    0x110, tandem_key_tand},
   {"@K ARE COUPLES THREESOME",              concept_some_are_tandem,       F+D, l_c3a,
    UC_none, 0, 0,                    0x110, tandem_key_cpls3},
   {"@K ARE TANDEM THREESOME",               concept_some_are_tandem,       F+D, l_c3a,
    UC_none, 0, 0,                    0x110, tandem_key_tand3},
   {"THE COUPLES ARE TWOSOME",               concept_tandem,                F+D, l_c3a,
    UC_none, 0, 0,                    0x210, tandem_key_cpls},
   {"THE TANDEMS ARE TWOSOME",               concept_tandem,                F+D, l_c3a,
    UC_none, 0, 0,                    0x210, tandem_key_tand},
   {"THE COUPLES OF 3 ARE THREESOME",        concept_tandem,                F+D, l_c3a,
    UC_none, 0, 0,                    0x210, tandem_key_cpls3},
   {"THE TANDEMS OF 3 ARE THREESOME",        concept_tandem,                F+D, l_c3a,
    UC_none, 0, 0,                    0x210, tandem_key_tand3},
   {"INSIDE TRIANGLES ARE THREESOME",        concept_tandem,                F+D, l_c4a,
    UC_none, 0, 0,                    0x010, tandem_key_inside_tgls},
   {"OUTSIDE TRIANGLES ARE THREESOME",       concept_tandem,                F+D, l_c4a,
    UC_none, 0, 0,                    0x010, tandem_key_outside_tgls},
   {"IN POINT TRIANGLES ARE THREESOME",      concept_tandem,                F+D, l_c4a,
    UC_none, 0, 0,                    0x010, tandem_key_inpoint_tgls},
   {"OUT POINT TRIANGLES ARE THREESOME",     concept_tandem,                F+D, l_c4a,
    UC_none, 0, 0,                    0x010, tandem_key_outpoint_tgls},
   {"WAVE-BASED TRIANGLES ARE THREESOME",    concept_tandem,                F+D, l_c4a,
    UC_none, 0, 0,                    0x010, tandem_key_wave_tgls},
   {"TANDEM-BASED TRIANGLES ARE THREESOME",  concept_tandem,                F+D, l_c4a,
    UC_none, 0, 0,                    0x010, tandem_key_tand_tgls},
   {"@k-BASED TRIANGLES ARE THREESOME",      concept_some_are_tandem,       F+D, l_c4a,
    UC_none, 0, 0,                    0x110, tandem_key_anyone_tgls},
   {"3X1 TRIANGLES ARE TRIANGLESOME",        concept_tandem,                F+D, l_c4a,
    UC_none, 0, 0,                    0x010, tandem_key_3x1tgls},
   {"COUPLES TWOSOME @9/@9 SOLID",           concept_frac_tandem,             D, l_c4,
    UC_none, 0, 0,                    0x030, tandem_key_cpls},
   {"TANDEM TWOSOME @9/@9 SOLID",            concept_frac_tandem,             D, l_c4,
    UC_none, 0, 0,                    0x030, tandem_key_tand},
   {"SIAMESE TWOSOME @9/@9 SOLID",           concept_frac_tandem,             D, l_c4,
    UC_none, 0, 0,                    0x030, tandem_key_siam},
   {"COUPLES THREESOME @9/@9 SOLID",         concept_frac_tandem,             D, l_c4,
    UC_none, 0, 0,                    0x030, tandem_key_cpls3},
   {"TANDEM THREESOME @9/@9 SOLID",          concept_frac_tandem,             D, l_c4,
    UC_none, 0, 0,                    0x030, tandem_key_tand3},
   {"SIAMESE THREESOME @9/@9 SOLID",         concept_frac_tandem,             D, l_c4,
    UC_none, 0, 0,                    0x030, tandem_key_siam3},
   {"COUPLES FOURSOME @9/@9 SOLID",          concept_frac_tandem,             D, l_c4,
    UC_none, 0, 0,                    0x030, tandem_key_cpls4},
   {"TANDEM FOURSOME @9/@9 SOLID",           concept_frac_tandem,             D, l_c4,
    UC_none, 0, 0,                    0x030, tandem_key_tand4},
   {"SIAMESE FOURSOME @9/@9 SOLID",          concept_frac_tandem,             D, l_c4,
    UC_none, 0, 0,                    0x030, tandem_key_siam4},
   {"BOXSOME @9/@9 SOLID",                   concept_frac_tandem,           F+D, l_c4,
    UC_none, 0, 0,                    0x030, tandem_key_box},
   {"DIAMONDSOME @9/@9 SOLID",               concept_frac_tandem,           F+D, l_c4,
    UC_none, 0, 0,                    0x030, tandem_key_diamond},
   {"SKEWSOME @9/@9 SOLID",                  concept_frac_tandem,             D, l_c4,
    UC_none, 0, 0,                    0x030, tandem_key_skew},
   {"GRUESOME TWOSOME @9/@9 SOLID",          concept_gruesome_frac_tandem,    D, l_c4,
    UC_none, 0, CONCPROP__NEEDK_2X8,  0x032, tandem_key_cpls},
   {"GRUESOME TANDEM TWOSOME @9/@9 SOLID",   concept_gruesome_frac_tandem,    D, l_c4,
    UC_none, 0, CONCPROP__NEEDK_2X8,  0x032, tandem_key_tand},
   {"@K ARE COUPLES TWOSOME @9/@9 SOLID",    concept_some_are_frac_tandem,  F+D, l_c4,
    UC_none, 0, 0,                    0x130, tandem_key_cpls},
   {"@K ARE TANDEM TWOSOME @9/@9 SOLID",     concept_some_are_frac_tandem,  F+D, l_c4,
    UC_none, 0, 0,                    0x130, tandem_key_tand},
   {"@K ARE COUPLES THREESOME @9/@9 SOLID",  concept_some_are_frac_tandem,  F+D, l_c4,
    UC_none, 0, 0,                    0x130, tandem_key_cpls3},
   {"@K ARE TANDEM THREESOME @9/@9 SOLID",   concept_some_are_frac_tandem,  F+D, l_c4,
    UC_none, 0, 0,                    0x130, tandem_key_tand3},
   {"THE COUPLES ARE TWOSOME @9/@9 SOLID",          concept_frac_tandem,    F+D, l_c4,
    UC_none, 0, 0,                    0x230, tandem_key_cpls},
   {"THE TANDEMS ARE TWOSOME @9/@9 SOLID",          concept_frac_tandem,    F+D, l_c4,
    UC_none, 0, 0,                    0x230, tandem_key_tand},
   {"THE COUPLES OF 3 ARE THREESOME @9/@9 SOLID",    concept_frac_tandem,   F+D, l_c4,
    UC_none, 0, 0,                    0x230, tandem_key_cpls3},
   {"THE TANDEMS OF 3 ARE THREESOME @9/@9 SOLID",    concept_frac_tandem,   F+D, l_c4,
    UC_none, 0, 0,                    0x230, tandem_key_tand3},
   {"INSIDE TRIANGLES ARE THREESOME @9/@9 SOLID",    concept_frac_tandem,   F+D, l_c4,
    UC_none, 0, 0,                    0x030, tandem_key_inside_tgls},
   {"OUTSIDE TRIANGLES ARE THREESOME @9/@9 SOLID",   concept_frac_tandem,   F+D, l_c4,
    UC_none, 0, 0,                    0x030, tandem_key_outside_tgls},
   {"IN POINT TRIANGLES ARE THREESOME @9/@9 SOLID",  concept_frac_tandem,   F+D, l_c4,
    UC_none, 0, 0,                    0x030, tandem_key_inpoint_tgls},
   {"OUT POINT TRIANGLES ARE THREESOME @9/@9 SOLID", concept_frac_tandem,   F+D, l_c4,
    UC_none, 0, 0,                    0x030, tandem_key_outpoint_tgls},
   {"WAVE-BASED TRIANGLES ARE THREESOME @9/@9 SOLID",concept_frac_tandem,   F+D, l_c4,
    UC_none, 0, 0,                    0x030, tandem_key_wave_tgls},
   {"TANDEM-BASED TRIANGLES ARE THREESOME @9/@9 SOLID",concept_frac_tandem, F+D, l_c4,
    UC_none, 0, 0,                    0x030, tandem_key_tand_tgls},
   {"@k-BASED TRIANGLES ARE THREESOME @9/@9 SOLID",concept_some_are_frac_tandem,F+D,l_c4,
    UC_none, 0, 0,                    0x130, tandem_key_anyone_tgls},
   {"3X1 TRIANGLES ARE TRIANGLESOME @9/@9 SOLID", concept_frac_tandem,      F+D, l_c4,
    UC_none, 0, 0,                    0x030, tandem_key_3x1tgls},
   {"Y-SOME @9/@9 SOLID",                    concept_frac_tandem,           F+D, l_c4,
    UC_none, 0, 0,                    0x030, tandem_key_ys},

   // Things to be used only with <various triangles> work <whatever>
   {"SOLID",                                 concept_tandem,                F+D, l_c2,
    UC_none, 0, 0,                    0x000, tandem_key_special_triangles},
   {"SOLID @9/@9 THREESOME",concept_frac_tandem,                            F+D, l_c4,
    UC_none, 0, 0,                    0x020, tandem_key_special_triangles},
   {"THREESOME",  concept_tandem,                                           F+D, l_c4a,
    UC_none, 0, 0,                    0x010, tandem_key_special_triangles},
   {"THREESOME @9/@9 SOLID",concept_frac_tandem,                            F+D, l_c4,
    UC_none, 0, 0,                    0x030, tandem_key_special_triangles},

   {"SPLIT PHANTOM COLUMNS",                 concept_do_phantom_2x4,          D, l_c3a,
    UC_spc, phantest_impossible,    DISTORTKEY_DIST_CLW*16+0, MPKIND__SPLIT, 0},
   {"SPLIT PHANTOM LINES",                   concept_do_phantom_2x4,          D, l_c3a,
    UC_spl, phantest_impossible,    DISTORTKEY_DIST_CLW*16+1, MPKIND__SPLIT, 0},
   {"SPLIT PHANTOM WAVES",                   concept_do_phantom_2x4,          D, l_c3a,
    UC_spw, phantest_impossible,    DISTORTKEY_DIST_CLW*16+3, MPKIND__SPLIT, 0},
   {"SPLIT PHANTOM BOXES",                   concept_do_phantom_boxes,        D, l_c3,
    UC_spb, phantest_impossible,    0, MPKIND__SPLIT},
   {"SPLIT PHANTOM DIAMONDS",                concept_do_phantom_diamonds,     D, l_c3,
    UC_spd, phantest_impossible,    CMD_MISC__VERIFY_DMD_LIKE, MPKIND__SPLIT},
   {"SPLIT PHANTOM DIAMOND SPOTS",           concept_do_phantom_diamonds,     D, l_c3,
    UC_spds, phantest_impossible,   0, MPKIND__SPLIT},
   {"SPLIT PHANTOM 1/4 TAGS",                concept_do_phantom_diamonds,     D, l_c3,
    UC_sp1, phantest_impossible,    CMD_MISC__VERIFY_1_4_TAG, MPKIND__SPLIT},
   {"SPLIT PHANTOM 3/4 TAGS",                concept_do_phantom_diamonds,     D, l_c3,
    UC_sp3, phantest_impossible,    CMD_MISC__VERIFY_3_4_TAG, MPKIND__SPLIT},
   {"SPLIT PHANTOM 1/4 LINES",               concept_do_phantom_diamonds,     D, l_c3,
    UC_none, phantest_impossible,   CMD_MISC__VERIFY_REAL_1_4_LINE, MPKIND__SPLIT},
   {"SPLIT PHANTOM 3/4 LINES",               concept_do_phantom_diamonds,     D, l_c3,
    UC_none, phantest_impossible,   CMD_MISC__VERIFY_REAL_3_4_LINE, MPKIND__SPLIT},
   {"SPLIT PHANTOM GENERAL 1/4 TAGS",        concept_do_phantom_diamonds,     D, l_c3,
    UC_spgt, phantest_impossible,   CMD_MISC__VERIFY_QTAG_LIKE, MPKIND__SPLIT},
   {"INTERLOCKED PHANTOM COLUMNS",           concept_do_phantom_2x4,          D, l_c4a,
    UC_ipc, phantest_impossible,    DISTORTKEY_DIST_CLW*16+0, MPKIND__INTLK, 0},
   {"INTERLOCKED PHANTOM LINES",             concept_do_phantom_2x4,          D, l_c4a,
    UC_ipl, phantest_impossible,    DISTORTKEY_DIST_CLW*16+1, MPKIND__INTLK, 0},
   {"INTERLOCKED PHANTOM WAVES",             concept_do_phantom_2x4,          D, l_c4a,
    UC_ipw, phantest_impossible,    DISTORTKEY_DIST_CLW*16+3, MPKIND__INTLK, 0},
   {"INTERLOCKED PHANTOM BOXES",             concept_do_phantom_boxes,        D, l_c4,
    UC_ipb, phantest_impossible,    0, MPKIND__INTLK},
   {"INTERLOCKED PHANTOM DIAMONDS",          concept_do_phantom_diamonds,     D, l_c4,
    UC_ipd, phantest_impossible,    CMD_MISC__VERIFY_DMD_LIKE, MPKIND__INTLK},
   {"INTERLOCKED PHANTOM DIAMOND SPOTS",     concept_do_phantom_diamonds,     D, l_c4,
    UC_ipds, phantest_impossible,   0, MPKIND__INTLK},
   {"INTERLOCKED PHANTOM 1/4 TAGS",          concept_do_phantom_diamonds,     D, l_c4,
    UC_ip1, phantest_impossible,    CMD_MISC__VERIFY_1_4_TAG, MPKIND__INTLK},
   {"INTERLOCKED PHANTOM 3/4 TAGS",          concept_do_phantom_diamonds,     D, l_c4,
    UC_ip3, phantest_impossible,    CMD_MISC__VERIFY_3_4_TAG, MPKIND__INTLK},
   {"INTERLOCKED PHANTOM 1/4 LINES",         concept_do_phantom_diamonds,     D, l_c4,
    UC_none, phantest_impossible,   CMD_MISC__VERIFY_REAL_1_4_LINE, MPKIND__INTLK},
   {"INTERLOCKED PHANTOM 3/4 LINES",         concept_do_phantom_diamonds,     D, l_c4,
    UC_none, phantest_impossible,   CMD_MISC__VERIFY_REAL_3_4_LINE, MPKIND__INTLK},
   {"INTERLOCKED PHANTOM GENERAL 1/4 TAGS",  concept_do_phantom_diamonds,     D, l_c4,
    UC_ipgt, phantest_impossible,   CMD_MISC__VERIFY_QTAG_LIKE, MPKIND__INTLK},
   {"PHANTOM COLUMNS",                       concept_do_phantom_2x4,          D, l_c3,
    UC_pc, phantest_first_or_both, DISTORTKEY_DIST_CLW*16+0, MPKIND__CONCPHAN, 0},
   {"PHANTOM LINES",                         concept_do_phantom_2x4,          D, l_c3,
    UC_pl, phantest_first_or_both, DISTORTKEY_DIST_CLW*16+1, MPKIND__CONCPHAN, 0},
   {"PHANTOM WAVES",                         concept_do_phantom_2x4,          D, l_c3,
    UC_pw, phantest_first_or_both, DISTORTKEY_DIST_CLW*16+3, MPKIND__CONCPHAN, 0},
   {"PHANTOM BOXES",                         concept_do_phantom_boxes,        D, l_c4a,
    UC_pb, phantest_first_or_both, 0, MPKIND__CONCPHAN},
   {"PHANTOM DIAMONDS",                      concept_do_phantom_diamonds,     D, l_c4,
    UC_pd, phantest_first_or_both, CMD_MISC__VERIFY_DMD_LIKE, MPKIND__CONCPHAN},
   {"PHANTOM DIAMOND SPOTS",                 concept_do_phantom_diamonds,     D, l_c4,
    UC_pds, phantest_first_or_both, 0, MPKIND__CONCPHAN},
   {"PHANTOM 1/4 TAGS",                      concept_do_phantom_diamonds,     D, l_c4,
    UC_p1, phantest_first_or_both, CMD_MISC__VERIFY_1_4_TAG, MPKIND__CONCPHAN},
   {"PHANTOM 3/4 TAGS",                      concept_do_phantom_diamonds,     D, l_c4,
    UC_p3, phantest_first_or_both, CMD_MISC__VERIFY_3_4_TAG, MPKIND__CONCPHAN},
   {"PHANTOM 1/4 LINES",                     concept_do_phantom_diamonds,     D, l_c4,
    UC_none, phantest_first_or_both, CMD_MISC__VERIFY_REAL_1_4_LINE, MPKIND__CONCPHAN},
   {"PHANTOM 3/4 LINES",                     concept_do_phantom_diamonds,     D, l_c4,
    UC_none, phantest_first_or_both, CMD_MISC__VERIFY_REAL_3_4_LINE, MPKIND__CONCPHAN},
   {"PHANTOM GENERAL 1/4 TAGS",              concept_do_phantom_diamonds,     D, l_c4,
    UC_pgt, phantest_first_or_both, CMD_MISC__VERIFY_QTAG_LIKE, MPKIND__CONCPHAN},
   {"12 MATRIX SPLIT PHANTOM COLUMNS",       concept_triple_twin_nomystic,    D, l_c3x,
    UC_none, 0, CONCPROP__NEEDK_3X4, 8, phantest_impossible, MPKIND__SPLIT},
   {"12 MATRIX SPLIT PHANTOM LINES",         concept_triple_twin_nomystic,    D, l_c3x,
    UC_none, 1, CONCPROP__NEEDK_3X4, 8, phantest_impossible, MPKIND__SPLIT},
   {"12 MATRIX INTERLOCKED PHANTOM COLUMNS", concept_triple_twin_nomystic,    D, l_c3x,
    UC_none, 0, CONCPROP__NEEDK_3X4, 8, phantest_impossible, MPKIND__INTLK},
   {"12 MATRIX INTERLOCKED PHANTOM LINES",   concept_triple_twin_nomystic,    D, l_c3x,
    UC_none, 1, CONCPROP__NEEDK_3X4, 8, phantest_impossible, MPKIND__INTLK},
   {"12 MATRIX PHANTOM COLUMNS",             concept_triple_twin_nomystic,    D, l_c3x,
    UC_none, 0, CONCPROP__NEEDK_3X4, 8, phantest_first_or_both, MPKIND__CONCPHAN},
   {"12 MATRIX PHANTOM LINES",               concept_triple_twin_nomystic,    D, l_c3x,
    UC_none, 1, CONCPROP__NEEDK_3X4, 8, phantest_first_or_both, MPKIND__CONCPHAN},
   {"SPLIT PHANTOM COLUMNS OF 6",            concept_triple_twin,             D, l_c4a,
    UC_none, 0, CONCPROP__NEEDK_4X6, 3, phantest_ok, MPKIND__SPLIT},
   {"SPLIT PHANTOM LINES OF 6",              concept_triple_twin,             D, l_c4a,
    UC_none, 1, CONCPROP__NEEDK_4X6, 3, phantest_ok, MPKIND__SPLIT},
   {"SPLIT PHANTOM WAVES OF 6",              concept_triple_twin,             D, l_c4a,
    UC_none, 3, CONCPROP__NEEDK_4X6, 3, phantest_ok, MPKIND__SPLIT},
   {"INTERLOCKED PHANTOM COLUMNS OF 6",      concept_triple_twin,             D, l_c4a,
    UC_none, 0, CONCPROP__NEEDK_4X6, 3, phantest_ok, MPKIND__INTLK},
   {"INTERLOCKED PHANTOM LINES OF 6",        concept_triple_twin,             D, l_c4a,
    UC_none, 1, CONCPROP__NEEDK_4X6, 3, phantest_ok, MPKIND__INTLK},
   {"INTERLOCKED PHANTOM WAVES OF 6",        concept_triple_twin,             D, l_c4a,
    UC_none, 3, CONCPROP__NEEDK_4X6, 3, phantest_ok, MPKIND__INTLK},
   {"PHANTOM COLUMNS OF 6",                  concept_triple_twin,             D, l_c4a,
    UC_none, 0, CONCPROP__NEEDK_4X6, 3, phantest_ok, MPKIND__CONCPHAN},
   {"PHANTOM LINES OF 6",                    concept_triple_twin,             D, l_c4a,
    UC_none, 1, CONCPROP__NEEDK_4X6, 3, phantest_ok, MPKIND__CONCPHAN},
   {"PHANTOM WAVES OF 6",                    concept_triple_twin,             D, l_c4a,
    UC_none, 3, CONCPROP__NEEDK_4X6, 3, phantest_ok, MPKIND__CONCPHAN},
   {"DIVIDED COLUMNS",                       concept_triple_twin_nomystic,    D, l_c4,
    UC_none, 0, CONCPROP__NEEDK_2X8, 10, phantest_impossible},
   {"DIVIDED LINES",                         concept_triple_twin_nomystic,    D, l_c4,
    UC_none, 1, CONCPROP__NEEDK_2X8, 10, phantest_impossible},
   {"DIVIDED WAVES",                         concept_triple_twin_nomystic,    D, l_c4,
    UC_none, 3, CONCPROP__NEEDK_2X8, 10, phantest_impossible},
   {"12 MATRIX DIVIDED COLUMNS",             concept_triple_twin_nomystic,    D, l_c4,
    UC_none, 0, CONCPROP__NEEDK_2X6, 9, phantest_impossible},
   {"12 MATRIX DIVIDED LINES",               concept_triple_twin_nomystic,    D, l_c4,
    UC_none, 1, CONCPROP__NEEDK_2X6, 9, phantest_impossible},
   {"12 MATRIX DIVIDED WAVES",               concept_triple_twin_nomystic,    D, l_c4,
    UC_none, 3, CONCPROP__NEEDK_2X6, 9, phantest_impossible},
   {"TWIN PHANTOM TIDAL COLUMNS",            concept_triple_twin_nomystic,    D, l_c3,
    UC_pc8, 0, CONCPROP__NEEDK_2X8, 7, phantest_impossible},
   {"TWIN PHANTOM TIDAL LINES",              concept_triple_twin_nomystic,    D, l_c3,
    UC_pl8, 1, CONCPROP__NEEDK_2X8, 7, phantest_impossible},
   {"TWIN PHANTOM TIDAL WAVES",              concept_triple_twin_nomystic,    D, l_c3,
    UC_none, 3, CONCPROP__NEEDK_2X8, 7, phantest_impossible},
   {"TWIN PHANTOM COLUMNS OF 6",             concept_triple_twin_nomystic,    D, l_c3,
    UC_pc6, 0, CONCPROP__NEEDK_2X6, 6, phantest_impossible},
   {"TWIN PHANTOM LINES OF 6",               concept_triple_twin_nomystic,    D, l_c3,
    UC_pl6, 1, CONCPROP__NEEDK_2X6, 6, phantest_impossible},
   {"TWIN PHANTOM WAVES OF 6",               concept_triple_twin_nomystic,    D, l_c3,
    UC_none, 3, CONCPROP__NEEDK_2X6, 6, phantest_impossible},
   {"TRIPLE COLUMNS",                        concept_multiple_lines,          D, l_c1,
    UC_tc, 0, CONCPROP__NEEDK_TRIPLE_1X4, 0, 3, MPKIND__SPLIT},
   {"TRIPLE LINES",                          concept_multiple_lines,          D, l_c1,
    UC_tl, 1, CONCPROP__NEEDK_TRIPLE_1X4, 0, 3, MPKIND__SPLIT},
   {"TRIPLE WAVES",                          concept_multiple_lines,          D, l_c1,
    UC_none, 3, CONCPROP__NEEDK_TRIPLE_1X4, 0, 3, MPKIND__SPLIT},
   {"TRIPLE BOXES",                          concept_multiple_boxes,          D, l_c1,
    UC_tb, 0, CONCPROP__NEEDK_2X6, 0, 3, MPKIND__SPLIT},
   {"TRIPLE DIAMONDS",                       concept_multiple_diamonds,       D, l_c3a,
    UC_td, 0, CONCPROP__NEEDK_3DMD, CMD_MISC__VERIFY_DMD_LIKE, 3, MPKIND__SPLIT},
   {"TRIPLE DIAMOND SPOTS",                  concept_multiple_diamonds,       D, l_c3a,
    UC_none, 0, CONCPROP__NEEDK_3DMD, 0, 3, MPKIND__SPLIT},
   {"TRIPLE 1/4 TAGS",                       concept_multiple_diamonds,       D, l_c4a,
    UC_none, 0, CONCPROP__NEEDK_3DMD, CMD_MISC__VERIFY_1_4_TAG, 3, MPKIND__SPLIT},
   {"TRIPLE 3/4 TAGS",                       concept_multiple_diamonds,       D, l_c4a,
    UC_none, 0, CONCPROP__NEEDK_3DMD, CMD_MISC__VERIFY_3_4_TAG, 3, MPKIND__SPLIT},
   {"TRIPLE 1/4 LINES",                      concept_multiple_diamonds,       D, l_c4a,
    UC_none, 0, CONCPROP__NEEDK_3DMD, CMD_MISC__VERIFY_REAL_1_4_LINE, 3, MPKIND__SPLIT},
   {"TRIPLE 3/4 LINES",                      concept_multiple_diamonds,       D, l_c4a,
    UC_none, 0, CONCPROP__NEEDK_3DMD, CMD_MISC__VERIFY_REAL_3_4_LINE, 3, MPKIND__SPLIT},
   {"TRIPLE GENERAL 1/4 TAGS",               concept_multiple_diamonds,       D, l_c4a,
    UC_none, 0, CONCPROP__NEEDK_3DMD, CMD_MISC__VERIFY_QTAG_LIKE, 3, MPKIND__SPLIT},
   {"TRIPLE LINES OR BOXES",                 concept_multiple_formations,     D, l_c3a,
    UC_none, 0, 0, 0, 3, MPKIND__SPLIT},
   {"TRIPLE BOXES OR LINES",                 concept_multiple_formations,     D, l_c3a,
    UC_none, 0, 0, 0, 3, MPKIND__SPLIT},
   {"TRIPLE LINES OR DIAMONDS",              concept_multiple_formations,     D, l_c3a,
    UC_none, 0, 0, 1, 3, MPKIND__SPLIT},
   {"TRIPLE DIAMONDS OR LINES",              concept_multiple_formations,     D, l_c3a,
    UC_none, 0, 0, 1, 3, MPKIND__SPLIT},
   {"TRIPLE BOXES OR DIAMONDS",              concept_multiple_formations,     D, l_c3a,
    UC_none, 0, 0, 2, 3, MPKIND__SPLIT},
   {"TRIPLE DIAMONDS OR BOXES",              concept_multiple_formations,     D, l_c3a,
    UC_none, 0, 0, 2, 3, MPKIND__SPLIT},
   {"TRIPLE Z's",                            concept_misc_distort_matrix,     D, l_c4,
    UC_none, 0, CONCPROP__NEEDK_3X6, 0, 3},
   {"TRIPLE 1X4s",                           concept_multiple_lines,          D, l_c3,
    UC_none, 2, CONCPROP__NEEDK_TRIPLE_1X4, 0, 3, MPKIND__SPLIT},
   {"TRIPLE COLUMNS OF 6",                   concept_triple_twin_nomystic,    D, l_c4a,
    UC_none, 0, CONCPROP__NEEDK_3X6, 1, phantest_ok},
   {"TRIPLE LINES OF 6",                     concept_triple_twin_nomystic,    D, l_c4a,
    UC_none, 1, CONCPROP__NEEDK_3X6, 1, phantest_ok},
   {"TRIPLE WAVES OF 6",                     concept_triple_twin_nomystic,    D, l_c4a,
    UC_none, 3, CONCPROP__NEEDK_3X6, 1, phantest_ok},
   {"TRIPLE TIDAL COLUMNS",                  concept_triple_twin_nomystic,    D, l_c3,
    UC_none, 0, CONCPROP__NEEDK_3X8, 5, phantest_impossible},
   {"TRIPLE TIDAL LINES",                    concept_triple_twin_nomystic,    D, l_c3,
    UC_none, 1, CONCPROP__NEEDK_3X8, 5, phantest_impossible},
   {"TRIPLE TIDAL WAVES",                    concept_triple_twin_nomystic,    D, l_c3,
    UC_none, 3, CONCPROP__NEEDK_3X8, 5, phantest_impossible},
   {"TRIPLE DIAGONAL COLUMNS",               concept_triple_diag,             D, l_c4,
    UC_none, 0},
   {"TRIPLE DIAGONAL LINES",                 concept_triple_diag,             D, l_c4,
    UC_none, 1},
   {"TRIPLE DIAGONAL WAVES",                 concept_triple_diag,             D, l_c4,
    UC_none, 3},
   {"TRIPLE TWIN COLUMNS",                   concept_triple_twin,             D, l_c4a,
    UC_trtc, 0, CONCPROP__NEEDK_4X6, 0, phantest_not_just_centers},
   {"TRIPLE TWIN LINES",                     concept_triple_twin,             D, l_c4a,
    UC_trtl, 1, CONCPROP__NEEDK_4X6, 0, phantest_not_just_centers},
   {"TRIPLE TWIN WAVES",                     concept_triple_twin,             D, l_c4a,
    UC_none, 3, CONCPROP__NEEDK_4X6, 0, phantest_not_just_centers},
   {"TRIPLE TWIN COLUMNS OF 3",              concept_triple_twin,             D, l_c4a,
    UC_none, 0, CONCPROP__NEEDK_3X6, 4, phantest_not_just_centers},
   {"TRIPLE TWIN LINES OF 3",                concept_triple_twin,             D, l_c4a,
    UC_none, 1, CONCPROP__NEEDK_3X6, 4, phantest_not_just_centers},
   {"TRIPLE TWIN WAVES OF 3",                concept_triple_twin,             D, l_c4a,
    UC_none, 3, CONCPROP__NEEDK_3X6, 4, phantest_not_just_centers},
   {"TRIPLE STAGGERED BOXES",                concept_misc_distort,            D, l_c4,
    UC_none, 7, CONCPROP__NEEDK_2X12, 0},
   {"QUADRUPLE COLUMNS",                     concept_multiple_lines,          D, l_c3,
    UC_none, 0, CONCPROP__NEEDK_QUAD_1X4, 0, 4, MPKIND__SPLIT},
   {"QUADRUPLE LINES",                       concept_multiple_lines,          D, l_c3,
    UC_none, 1, CONCPROP__NEEDK_QUAD_1X4, 0, 4, MPKIND__SPLIT},
   {"QUADRUPLE WAVES",                       concept_multiple_lines,          D, l_c3,
    UC_none, 3, CONCPROP__NEEDK_QUAD_1X4, 0, 4, MPKIND__SPLIT},
   {"QUADRUPLE BOXES",                       concept_multiple_boxes,          D, l_c3,
    UC_none, 0, CONCPROP__NEEDK_2X8, 0, 4, MPKIND__SPLIT},
   {"QUADRUPLE DIAMONDS",                    concept_multiple_diamonds,       D, l_c3,
    UC_qd, 0, CONCPROP__NEEDK_4D_4PTPD, CMD_MISC__VERIFY_DMD_LIKE, 4},
   {"QUADRUPLE DIAMOND SPOTS",               concept_multiple_diamonds,       D, l_c3,
    UC_none, 0, CONCPROP__NEEDK_4D_4PTPD, 0, 4},
   {"QUADRUPLE 1/4 TAGS",                    concept_multiple_diamonds,       D, l_c3,
    UC_none, 0, CONCPROP__NEEDK_4D_4PTPD, CMD_MISC__VERIFY_1_4_TAG, 4},
   {"QUADRUPLE 3/4 TAGS",                    concept_multiple_diamonds,       D, l_c3,
    UC_none, 0, CONCPROP__NEEDK_4D_4PTPD, CMD_MISC__VERIFY_3_4_TAG, 4},
   {"QUADRUPLE 1/4 LINES",                   concept_multiple_diamonds,       D, l_c3,
    UC_none, 0, CONCPROP__NEEDK_4D_4PTPD, CMD_MISC__VERIFY_REAL_1_4_LINE, 4},
   {"QUADRUPLE 3/4 LINES",                   concept_multiple_diamonds,       D, l_c3,
    UC_none, 0, CONCPROP__NEEDK_4D_4PTPD, CMD_MISC__VERIFY_REAL_3_4_LINE, 4},
   {"QUADRUPLE GENERAL 1/4 TAGS",            concept_multiple_diamonds,       D, l_c3,
    UC_none, 0, CONCPROP__NEEDK_4D_4PTPD, CMD_MISC__VERIFY_QTAG_LIKE, 4},
   {"QUADRUPLE COLUMNS OF 3",                concept_multiple_lines,          D, l_c4a,
    UC_none, 0, CONCPROP__NEEDK_QUAD_1X3, 1, 4, MPKIND__SPLIT},
   {"QUADRUPLE LINES OF 3",                  concept_multiple_lines,          D, l_c4a,
    UC_none, 1, CONCPROP__NEEDK_QUAD_1X3, 1, 4, MPKIND__SPLIT},
   {"QUADRUPLE WAVES OF 3",                  concept_multiple_lines,          D, l_c4a,
    UC_none, 3, CONCPROP__NEEDK_QUAD_1X3, 1, 4, MPKIND__SPLIT},
   {"QUADRUPLE COLUMNS OF 6",                concept_triple_twin,             D, l_c4,
    UC_none, 0, CONCPROP__NEEDK_4X6, 2, phantest_ok},
   {"QUADRUPLE LINES OF 6",                  concept_triple_twin,             D, l_c4,
    UC_none, 1, CONCPROP__NEEDK_4X6, 2, phantest_ok},
   {"QUADRUPLE WAVES OF 6",                  concept_triple_twin,             D, l_c4,
    UC_none, 3, CONCPROP__NEEDK_4X6, 2, phantest_ok},
   {"QUINTUPLE COLUMNS",                     concept_multiple_lines,          D, l_c4a,
    UC_none, 0, CONCPROP__NEEDK_4X5, 0, 5, MPKIND__SPLIT},
   {"QUINTUPLE LINES",                       concept_multiple_lines,          D, l_c4a,
    UC_none, 1, CONCPROP__NEEDK_4X5, 0, 5, MPKIND__SPLIT},
   {"QUINTUPLE WAVES",                       concept_multiple_lines,          D, l_c4a,
    UC_none, 3, CONCPROP__NEEDK_4X5, 0, 5, MPKIND__SPLIT},
   {"QUINTUPLE 1X4s",                        concept_multiple_lines,          D, l_c4a,
    UC_none, 2, CONCPROP__NEEDK_4X5, 0, 5, MPKIND__SPLIT},
   {"QUINTUPLE BOXES",                       concept_multiple_boxes,          D, l_c4a,
    UC_none, 0, CONCPROP__NEEDK_2X10, 0, 5, MPKIND__SPLIT},
   {"SEXTUPLE COLUMNS",                      concept_multiple_lines,          D, l_c4a,
    UC_none, 0, 0, 0, 6, MPKIND__SPLIT},
   {"SEXTUPLE LINES",                        concept_multiple_lines,          D, l_c4a,
    UC_none, 1, 0, 0, 6, MPKIND__SPLIT},
   {"SEXTUPLE WAVES",                        concept_multiple_lines,          D, l_c4a,
    UC_none, 3, 0, 0, 6, MPKIND__SPLIT},
   {"SEXTUPLE 1X4s",                         concept_multiple_lines,          D, l_c4a,
    UC_none, 2, 0, 0, 6, MPKIND__SPLIT},
   {"SEXTUPLE BOXES",                        concept_multiple_boxes,          D, l_c4a,
    UC_none, 0, CONCPROP__NEEDK_2X12, 0, 6, MPKIND__SPLIT},
   {"TRIPLE COLUMNS WORKING TOGETHER",       concept_multiple_lines_tog_std,  D, l_c4a,
    UC_tcwt, 10, CONCPROP__NEEDK_TRIPLE_1X4, 0, 3},
   {"TRIPLE COLUMNS WORKING APART",          concept_multiple_lines_tog_std,  D, l_c4a,
    UC_tcwa, 11, CONCPROP__NEEDK_TRIPLE_1X4, 0, 3},
   {"TRIPLE COLUMNS WORKING RIGHT",          concept_multiple_lines_tog,      D, l_c3,
    UC_tcwr, 2,  CONCPROP__NEEDK_TRIPLE_1X4, 0, 3},
   {"TRIPLE COLUMNS WORKING LEFT",           concept_multiple_lines_tog,      D, l_c3,
    UC_tcwl, 0,  CONCPROP__NEEDK_TRIPLE_1X4, 0, 3},
   {"TRIPLE COLUMNS WORKING CLOCKWISE",      concept_multiple_lines_tog_std,  D, l_c4,
    UC_none, 8,  CONCPROP__NEEDK_TRIPLE_1X4, 0, 3},
   {"TRIPLE COLUMNS WORKING COUNTERCLOCKWISE",concept_multiple_lines_tog_std, D, l_c4,
    UC_none, 9,  CONCPROP__NEEDK_TRIPLE_1X4, 0, 3},
   {"TRIPLE LINES WORKING TOGETHER",         concept_multiple_lines_tog_std,  D, l_c4a,
    UC_tlwt, 10, CONCPROP__NEEDK_TRIPLE_1X4, 1, 3},
   {"TRIPLE LINES WORKING APART",            concept_multiple_lines_tog_std,  D, l_c4a,
    UC_tlwa, 11, CONCPROP__NEEDK_TRIPLE_1X4, 1, 3},
   {"TRIPLE LINES WORKING FORWARD",          concept_multiple_lines_tog,      D, l_c3,
    UC_tlwf, 0,  CONCPROP__NEEDK_TRIPLE_1X4, 1, 3},
   {"TRIPLE LINES WORKING BACKWARD",         concept_multiple_lines_tog,      D, l_c3,
    UC_tlwb, 2,  CONCPROP__NEEDK_TRIPLE_1X4, 1, 3},
   {"TRIPLE LINES WORKING CLOCKWISE",        concept_multiple_lines_tog_std,  D, l_c4,
    UC_none, 8,  CONCPROP__NEEDK_TRIPLE_1X4, 1, 3},
   {"TRIPLE LINES WORKING COUNTERCLOCKWISE", concept_multiple_lines_tog_std,  D, l_c4,
    UC_none, 9,  CONCPROP__NEEDK_TRIPLE_1X4, 1, 3},
   {"TRIPLE WAVES WORKING TOGETHER",         concept_multiple_lines_tog_std,  D, l_c4a,
    UC_none, 10, CONCPROP__NEEDK_TRIPLE_1X4, 3, 3},
   {"TRIPLE WAVES WORKING APART",            concept_multiple_lines_tog_std,  D, l_c4a,
    UC_none, 11, CONCPROP__NEEDK_TRIPLE_1X4, 3, 3},
   {"TRIPLE WAVES WORKING FORWARD",          concept_multiple_lines_tog,      D, l_c3,
    UC_none, 0,  CONCPROP__NEEDK_TRIPLE_1X4, 3, 3},
   {"TRIPLE WAVES WORKING BACKWARD",         concept_multiple_lines_tog,      D, l_c3,
    UC_none, 2,  CONCPROP__NEEDK_TRIPLE_1X4, 3, 3},
   {"TRIPLE WAVES WORKING CLOCKWISE",        concept_multiple_lines_tog_std,  D, l_c4,
    UC_none, 8,  CONCPROP__NEEDK_TRIPLE_1X4, 3, 3},
   {"TRIPLE WAVES WORKING COUNTERCLOCKWISE", concept_multiple_lines_tog_std,  D, l_c4,
    UC_none, 9,  CONCPROP__NEEDK_TRIPLE_1X4, 3, 3},
   {"TRIPLE BOXES WORKING TOGETHER",         concept_triple_boxes_together,   D, l_c3,
    UC_tbwt, 6, 0},
   {"TRIPLE BOXES WORKING APART",            concept_triple_boxes_together,   D, l_c3,
    UC_tbwa, 7, 0},
   {"TRIPLE BOXES WORKING FORWARD",          concept_triple_boxes_together,   D, l_c3,
    UC_tbwf, 0, 0},
   {"TRIPLE BOXES WORKING BACKWARD",         concept_triple_boxes_together,   D, l_c3,
    UC_tbwb, 2, 0},
   {"TRIPLE BOXES WORKING RIGHT",            concept_triple_boxes_together,   D, l_c3,
    UC_tbwr, 3, 0},
   {"TRIPLE BOXES WORKING LEFT",             concept_triple_boxes_together,   D, l_c3,
    UC_tbwl, 1, 0},
   {"TRIPLE BOXES WORKING CLOCKWISE",        concept_triple_boxes_together,   D, l_c4,
    UC_none, 8, 0},
   {"TRIPLE BOXES WORKING COUNTERCLOCKWISE", concept_triple_boxes_together,   D, l_c4,
    UC_none, 9, 0},
   {"TRIPLE DIAMONDS WORKING TOGETHER",      concept_triple_diamonds_together,D, l_c3,
    UC_tdwt, 0},
   {"TRIPLE 1/4 TAGS WORKING TOGETHER",      concept_triple_diamonds_together,D, l_c4a,
    UC_none, 0},
   {"TRIPLE 1/4 TAGS WORKING RIGHT",         concept_triple_diamonds_together,D, l_c4a,
    UC_none, 1},
   {"TRIPLE 1/4 TAGS WORKING LEFT",          concept_triple_diamonds_together,D, l_c4a,
    UC_none, 2},
   {"TRIPLE 1/4 LINES WORKING TOGETHER",     concept_triple_diamonds_together,D, l_c4a,
    UC_none, 0},
   {"TRIPLE 1/4 LINES WORKING RIGHT",        concept_triple_diamonds_together,D, l_c4a,
    UC_none, 1},
   {"TRIPLE 1/4 LINES WORKING LEFT",         concept_triple_diamonds_together,D, l_c4a,
    UC_none, 2},
   {"TRIPLE TIDAL COLUMNS WORKING RIGHT",    concept_triple_1x8_tog,          D, l_c4,
    UC_none, 2, 0},
   {"TRIPLE TIDAL COLUMNS WORKING LEFT",     concept_triple_1x8_tog,          D, l_c4,
    UC_none, 0, 0},
   {"TRIPLE TIDAL LINES WORKING FORWARD",    concept_triple_1x8_tog,          D, l_c4,
    UC_none, 0, 1},
   {"TRIPLE TIDAL LINES WORKING BACKWARD",   concept_triple_1x8_tog,          D, l_c4,
    UC_none, 2, 1},
   {"TRIPLE TIDAL WAVES WORKING FORWARD",    concept_triple_1x8_tog,          D, l_c4,
    UC_none, 0, 3},
   {"TRIPLE TIDAL WAVES WORKING BACKWARD",   concept_triple_1x8_tog,          D, l_c4,
    UC_none, 2, 3},
   {"TRIPLE DIAGONAL COLUMNS WORKING RIGHT", concept_triple_diag_together,    D, l_c4,
    UC_none, 3, 0},
   {"TRIPLE DIAGONAL COLUMNS WORKING LEFT",  concept_triple_diag_together,    D, l_c4,
    UC_none, 1, 0},
   {"TRIPLE DIAGONAL LINES WORKING FORWARD", concept_triple_diag_together,    D, l_c4,
    UC_none, 0, 1},
   {"TRIPLE DIAGONAL LINES WORKING BACKWARD",concept_triple_diag_together,    D, l_c4,
    UC_none, 2, 1},
   {"TRIPLE DIAGONAL WAVES WORKING FORWARD", concept_triple_diag_together,    D, l_c4,
    UC_none, 0, 3},
   {"TRIPLE DIAGONAL WAVES WORKING BACKWARD",concept_triple_diag_together,    D, l_c4,
    UC_none, 2, 3},
   {"QUADRUPLE COLUMNS WORKING TOGETHER",    concept_multiple_lines_tog_std,  D, l_c4a,
    UC_qcwt, 10, CONCPROP__NEEDK_QUAD_1X4, 0, 4},
   {"QUADRUPLE COLUMNS WORKING APART",       concept_multiple_lines_tog_std,  D, l_c4a,
    UC_qcwa, 11, CONCPROP__NEEDK_QUAD_1X4, 0, 4},
   {"QUADRUPLE COLUMNS WORKING RIGHT",       concept_multiple_lines_tog,      D, l_c4a,
    UC_qcwr, 2,  CONCPROP__NEEDK_QUAD_1X4, 0, 4},
   {"QUADRUPLE COLUMNS WORKING LEFT",        concept_multiple_lines_tog,      D, l_c4a,
    UC_qcwl, 0,  CONCPROP__NEEDK_QUAD_1X4, 0, 4},
   {"QUADRUPLE COLUMNS WORKING CLOCKWISE",   concept_multiple_lines_tog_std,  D, l_c4,
    UC_none, 8,  CONCPROP__NEEDK_QUAD_1X4, 0, 4},
   {"QUADRUPLE COLUMNS WORKING COUNTERCLOCKWISE",concept_multiple_lines_tog_std,D,l_c4,
    UC_none, 9,  CONCPROP__NEEDK_QUAD_1X4, 0, 4},
   {"QUADRUPLE COLUMNS WORKING TOWARD THE CENTER",concept_multiple_lines_tog_std,D,l_c4,
    UC_none, 12, CONCPROP__NEEDK_QUAD_1X4, 0, 4},
   {"QUADRUPLE COLUMNS WORKING INWARD",      concept_multiple_lines_tog_std,  D, l_c4,
    UC_none, 12, CONCPROP__NEEDK_QUAD_1X4, 0, 4},
   {"QUADRUPLE LINES WORKING TOGETHER",      concept_multiple_lines_tog_std,  D, l_c4a,
    UC_qlwt, 10, CONCPROP__NEEDK_QUAD_1X4, 1, 4},
   {"QUADRUPLE LINES WORKING APART",         concept_multiple_lines_tog_std,  D, l_c4a,
    UC_qlwa, 11, CONCPROP__NEEDK_QUAD_1X4, 1, 4},
   {"QUADRUPLE LINES WORKING FORWARD",       concept_multiple_lines_tog,      D, l_c4a,
    UC_qlwf, 0,  CONCPROP__NEEDK_QUAD_1X4, 1, 4},
   {"QUADRUPLE LINES WORKING BACKWARD",      concept_multiple_lines_tog,      D, l_c4a,
    UC_qlwb, 2,  CONCPROP__NEEDK_QUAD_1X4, 1, 4},
   {"QUADRUPLE LINES WORKING CLOCKWISE",     concept_multiple_lines_tog_std,  D, l_c4,
    UC_none, 8,  CONCPROP__NEEDK_QUAD_1X4, 1, 4},
   {"QUADRUPLE LINES WORKING COUNTERCLOCKWISE",concept_multiple_lines_tog_std,D, l_c4,
    UC_none, 9,  CONCPROP__NEEDK_QUAD_1X4, 1, 4},
   {"QUADRUPLE LINES WORKING TOWARD THE CENTER",concept_multiple_lines_tog_std,D,l_c4,
    UC_none, 12, CONCPROP__NEEDK_QUAD_1X4, 1, 4},
   {"QUADRUPLE LINES WORKING INWARD",        concept_multiple_lines_tog_std,  D, l_c4,
    UC_none, 12, CONCPROP__NEEDK_QUAD_1X4, 1, 4},
   {"QUADRUPLE WAVES WORKING TOGETHER",      concept_multiple_lines_tog_std,  D, l_c4a,
    UC_none, 10, CONCPROP__NEEDK_QUAD_1X4, 3, 4},
   {"QUADRUPLE WAVES WORKING APART",         concept_multiple_lines_tog_std,  D, l_c4a,
    UC_none, 11, CONCPROP__NEEDK_QUAD_1X4, 3, 4},
   {"QUADRUPLE WAVES WORKING FORWARD",       concept_multiple_lines_tog,      D, l_c4a,
    UC_none, 0,  CONCPROP__NEEDK_QUAD_1X4, 3, 4},
   {"QUADRUPLE WAVES WORKING BACKWARD",      concept_multiple_lines_tog,      D, l_c4a,
    UC_none, 2,  CONCPROP__NEEDK_QUAD_1X4, 3, 4},
   {"QUADRUPLE WAVES WORKING CLOCKWISE",     concept_multiple_lines_tog_std,  D, l_c4,
    UC_none, 8,  CONCPROP__NEEDK_QUAD_1X4, 3, 4},
   {"QUADRUPLE WAVES WORKING COUNTERCLOCKWISE",concept_multiple_lines_tog_std,D, l_c4,
    UC_none, 9,  CONCPROP__NEEDK_QUAD_1X4, 3, 4},
   {"QUADRUPLE WAVES WORKING TOWARD THE CENTER",concept_multiple_lines_tog_std,D,l_c4,
    UC_none, 12, CONCPROP__NEEDK_QUAD_1X4, 3, 4},
   {"QUADRUPLE WAVES WORKING INWARD",        concept_multiple_lines_tog_std,  D, l_c4,
    UC_none, 12, CONCPROP__NEEDK_QUAD_1X4, 3, 4},
   {"QUADRUPLE BOXES WORKING TOGETHER",      concept_quad_boxes_together,     D, l_c4a,
    UC_qbwt, 6, 0},
   {"QUADRUPLE BOXES WORKING APART",         concept_quad_boxes_together,     D, l_c4a,
    UC_qbwa, 7, 0},
   {"QUADRUPLE BOXES WORKING FORWARD",       concept_quad_boxes_together,     D, l_c4a,
    UC_qbwf, 0, 0},
   {"QUADRUPLE BOXES WORKING BACKWARD",      concept_quad_boxes_together,     D, l_c4a,
    UC_qbwb, 2, 0},
   {"QUADRUPLE BOXES WORKING RIGHT",         concept_quad_boxes_together,     D, l_c4a,
    UC_qbwr, 3, 0},
   {"QUADRUPLE BOXES WORKING LEFT",          concept_quad_boxes_together,     D, l_c4a,
    UC_qbwl, 1, 0},
   {"QUADRUPLE BOXES WORKING CLOCKWISE",     concept_quad_boxes_together,     D, l_c4,
    UC_none, 8, 0},
   {"QUADRUPLE BOXES WORKING COUNTERCLOCKWISE",concept_quad_boxes_together,   D, l_c4,
    UC_none, 9, 0},
   {"QUADRUPLE BOXES WORKING TOWARD THE CENTER",concept_quad_boxes_together,  D, l_c4,
    UC_none, 12, 0},
   {"QUADRUPLE BOXES WORKING INWARD",        concept_quad_boxes_together,     D, l_c4,
    UC_none, 12, 0},
   {"QUADRUPLE DIAMONDS WORKING TOGETHER",   concept_quad_diamonds_together,  D, l_c4a,
    UC_qdwt, 0, 0},
   {"QUADRUPLE DIAMONDS WORKING TOWARD THE CENTER",concept_quad_diamonds_together,D,l_c4,
    UC_none, 12, 0},
   {"QUADRUPLE DIAMONDS WORKING INWARD",     concept_quad_diamonds_together,  D, l_c4,
    UC_none, 12, 0},
   {"QUADRUPLE 1/4 TAGS WORKING TOGETHER",   concept_quad_diamonds_together,  D, l_c4a,
    UC_none, 0},
   {"QUADRUPLE 1/4 TAGS WORKING RIGHT",      concept_quad_diamonds_together,  D, l_c4a,
    UC_none, 1},
   {"QUADRUPLE 1/4 TAGS WORKING LEFT",       concept_quad_diamonds_together,  D, l_c4a,
    UC_none, 2},
   {"QUADRUPLE 1/4 TAGS WORKING TOWARD THE CENTER",concept_quad_diamonds_together,D,l_c4a,
    UC_none, 12},
   {"QUADRUPLE 1/4 TAGS WORKING INWARD",     concept_quad_diamonds_together,  D, l_c4a,
    UC_none, 12},
   {"QUADRUPLE 1/4 LINES WORKING TOGETHER",  concept_quad_diamonds_together,  D, l_c4a,
    UC_none, 0},
   {"QUADRUPLE 1/4 LINES WORKING RIGHT",     concept_quad_diamonds_together,  D, l_c4a,
    UC_none, 1},
   {"QUADRUPLE 1/4 LINES WORKING LEFT",      concept_quad_diamonds_together,  D, l_c4a,
    UC_none, 2},
   {"QUADRUPLE 1/4 LINES WORKING TOWARD THE CENTER",concept_quad_diamonds_together,D,l_c4a,
    UC_none, 12},
   {"QUADRUPLE 1/4 LINES WORKING INWARD",    concept_quad_diamonds_together,  D, l_c4a,
    UC_none, 12},
   {"QUINTUPLE COLUMNS WORKING RIGHT",       concept_multiple_lines_tog,      D, l_c4a,
    UC_none, 2,  CONCPROP__NEEDK_4X5,      0, 5},
   {"QUINTUPLE COLUMNS WORKING LEFT",        concept_multiple_lines_tog,      D, l_c4a,
    UC_none, 0,  CONCPROP__NEEDK_4X5,      0, 5},
   {"QUINTUPLE COLUMNS WORKING CLOCKWISE",   concept_multiple_lines_tog_std,  D, l_c4,
    UC_none, 8,  CONCPROP__NEEDK_4X5,      0, 5},
   {"QUINTUPLE COLUMNS WORKING COUNTERCLOCKWISE",concept_multiple_lines_tog_std,D,l_c4,
    UC_none, 9,  CONCPROP__NEEDK_4X5,      0, 5},
   {"QUINTUPLE LINES WORKING FORWARD",       concept_multiple_lines_tog,      D, l_c4a,
    UC_none, 0,  CONCPROP__NEEDK_4X5,      1, 5},
   {"QUINTUPLE LINES WORKING BACKWARD",      concept_multiple_lines_tog,      D, l_c4a,
    UC_none, 2,  CONCPROP__NEEDK_4X5,      1, 5},
   {"QUINTUPLE LINES WORKING CLOCKWISE",     concept_multiple_lines_tog_std,  D, l_c4,
    UC_none, 8,  CONCPROP__NEEDK_4X5,      1, 5},
   {"QUINTUPLE LINES WORKING COUNTERCLOCKWISE",concept_multiple_lines_tog_std,D, l_c4,
    UC_none, 9,  CONCPROP__NEEDK_4X5,      1, 5},
   {"QUINTUPLE WAVES WORKING FORWARD",       concept_multiple_lines_tog,      D, l_c4a,
    UC_none, 0,  CONCPROP__NEEDK_4X5,      3, 5},
   {"QUINTUPLE WAVES WORKING BACKWARD",      concept_multiple_lines_tog,      D, l_c4a,
    UC_none, 2,  CONCPROP__NEEDK_4X5,      3, 5},
   {"QUINTUPLE WAVES WORKING CLOCKWISE",     concept_multiple_lines_tog_std,  D, l_c4,
    UC_none, 8,  CONCPROP__NEEDK_4X5,      3, 5},
   {"QUINTUPLE WAVES WORKING COUNTERCLOCKWISE",concept_multiple_lines_tog_std,D, l_c4,
    UC_none, 9,  CONCPROP__NEEDK_4X5,      3, 5},
   {"SEXTUPLE COLUMNS WORKING RIGHT",        concept_multiple_lines_tog,      D, l_c4a,
    UC_none, 2,  CONCPROP__NEEDK_4X6,      0, 6},
   {"SEXTUPLE COLUMNS WORKING LEFT",         concept_multiple_lines_tog,      D, l_c4a,
    UC_none, 0,  CONCPROP__NEEDK_4X6,      0, 6},
   {"SEXTUPLE COLUMNS WORKING CLOCKWISE",    concept_multiple_lines_tog_std,  D, l_c4,
    UC_none, 8,  CONCPROP__NEEDK_4X6,      0, 6},
   {"SEXTUPLE COLUMNS WORKING COUNTERCLOCKWISE",concept_multiple_lines_tog_std,D,l_c4,
    UC_none, 9,  CONCPROP__NEEDK_4X6,      0, 6},
   {"SEXTUPLE LINES WORKING FORWARD",        concept_multiple_lines_tog,      D, l_c4a,
    UC_none, 0,  CONCPROP__NEEDK_4X6,      1, 6},
   {"SEXTUPLE LINES WORKING BACKWARD",       concept_multiple_lines_tog,      D, l_c4a,
    UC_none, 2,  CONCPROP__NEEDK_4X6,      1, 6},
   {"SEXTUPLE LINES WORKING CLOCKWISE",      concept_multiple_lines_tog_std,  D, l_c4,
    UC_none, 8,  CONCPROP__NEEDK_4X6,      1, 6},
   {"SEXTUPLE LINES WORKING COUNTERCLOCKWISE",concept_multiple_lines_tog_std, D, l_c4,
    UC_none, 9,  CONCPROP__NEEDK_4X6,      1, 6},
   {"SEXTUPLE WAVES WORKING FORWARD",        concept_multiple_lines_tog,      D, l_c4a,
    UC_none, 0,  CONCPROP__NEEDK_4X6,      3, 6},
   {"SEXTUPLE WAVES WORKING BACKWARD",       concept_multiple_lines_tog,      D, l_c4a,
    UC_none, 2,  CONCPROP__NEEDK_4X6,      3, 6},
   {"SEXTUPLE WAVES WORKING CLOCKWISE",      concept_multiple_lines_tog_std,  D, l_c4,
    UC_none, 8,  CONCPROP__NEEDK_4X6,      3, 6},
   {"SEXTUPLE WAVES WORKING COUNTERCLOCKWISE",concept_multiple_lines_tog_std, D, l_c4,
    UC_none, 9,  CONCPROP__NEEDK_4X6,      3, 6},
   {"CENTER TRIPLE COLUMN",                  concept_in_out_std,              D, l_c1,
    UC_none, 0, CONCPROP__NEEDK_CTR_1X4, 0},
   {"OUTSIDE TRIPLE COLUMNS",                concept_in_out_std,              D, l_c1,
    UC_none, 8+0, CONCPROP__NEEDK_END_1X4, 0},
   {"CENTER TRIPLE LINE",                    concept_in_out_std,              D, l_c1,
    UC_none, 1, CONCPROP__NEEDK_CTR_1X4, 0},
   {"OUTSIDE TRIPLE LINES",                  concept_in_out_std,              D, l_c1,
    UC_none, 8+1, CONCPROP__NEEDK_END_1X4, 0},
   {"CENTER TRIPLE WAVE",                    concept_in_out_std,              D, l_c1,
    UC_none, 3, CONCPROP__NEEDK_CTR_1X4, 0},
   {"OUTSIDE TRIPLE WAVES",                  concept_in_out_std,              D, l_c1,
    UC_none, 8+3, CONCPROP__NEEDK_END_1X4, 0},
   {"CENTER TRIPLE BOX",                     concept_in_out_nostd,            D, l_c1,
    UC_none, 4,   CONCPROP__NEEDK_CTR_2X2, 0},
   {"OUTSIDE TRIPLE BOXES",                  concept_in_out_nostd,            D, l_c1,
    UC_none, 8+4, CONCPROP__NEEDK_END_2X2, 0},
   {"CENTER TRIPLE DIAMOND",                 concept_in_out_nostd,            D, l_c3a,
    UC_none, 5, CONCPROP__NEEDK_CTR_DMD, CMD_MISC__VERIFY_DMD_LIKE},
   {"OUTSIDE TRIPLE DIAMONDS",               concept_in_out_nostd,            D, l_c3a,
    UC_none, 8+5, CONCPROP__NEEDK_END_DMD, CMD_MISC__VERIFY_DMD_LIKE},
   {"CENTER Z",                              concept_in_out_nostd,            D, l_c3a,
    UC_none, 6, 0, 0},
   {"OUTSIDE TRIPLE Z's",                    concept_in_out_nostd,            D, l_c3a,
    UC_none, 8+6, CONCPROP__NEEDK_3X6, 0},
   {"CENTER TIDAL COLUMN",                   concept_in_out_nostd,            D, l_c4a,
    UC_none, 80+0, CONCPROP__NEEDK_3X8, 0},
   {"CENTER TIDAL LINE",                     concept_in_out_nostd,            D, l_c4a,
    UC_none, 80+1, CONCPROP__NEEDK_3X8, 0},
   {"CENTER TIDAL WAVE",                     concept_in_out_nostd,            D, l_c4a,
    UC_none, 80+3, CONCPROP__NEEDK_3X8, 0},
   {"CENTER TRIPLE TWIN COLUMNS",            concept_in_out_std,              D, l_c4a,
    UC_none, 32+0, CONCPROP__NEEDK_4X6, 0},
   {"OUTSIDE TRIPLE TWIN COLUMNS",           concept_in_out_std,              D, l_c4a,
    UC_none, 32+8+0, CONCPROP__NEEDK_4X6, 0},
   {"CENTER TRIPLE TWIN LINES",              concept_in_out_std,              D, l_c4a,
    UC_none, 32+1, CONCPROP__NEEDK_4X6, 0},
   {"OUTSIDE TRIPLE TWIN LINES",             concept_in_out_std,              D, l_c4a,
    UC_none, 32+8+1, CONCPROP__NEEDK_4X6, 0},
   {"CENTER TRIPLE TWIN WAVES",              concept_in_out_std,              D, l_c4a,
    UC_none, 32+3, CONCPROP__NEEDK_4X6, 0},
   {"OUTSIDE TRIPLE TWIN WAVES",             concept_in_out_std,              D, l_c4a,
    UC_none, 32+8+3, CONCPROP__NEEDK_4X6, 0},
   {"CENTER TRIPLE TWIN COLUMNS OF 3",       concept_in_out_std,              D, l_c4a,
    UC_none, 48+0, CONCPROP__NEEDK_3X6, 0},
   {"OUTSIDE TRIPLE TWIN COLUMNS OF 3",      concept_in_out_std,              D, l_c4a,
    UC_none, 48+8+0, CONCPROP__NEEDK_3X6, 0},
   {"CENTER TRIPLE TWIN LINES OF 3",         concept_in_out_std,              D, l_c4a,
    UC_none, 48+1, CONCPROP__NEEDK_3X6, 0},
   {"OUTSIDE TRIPLE TWIN LINES OF 3",        concept_in_out_std,              D, l_c4a,
    UC_none, 48+8+1, CONCPROP__NEEDK_3X6, 0},
   {"CENTER TRIPLE TWIN WAVES OF 3",         concept_in_out_std,              D, l_c4a,
    UC_none, 48+3, CONCPROP__NEEDK_3X6, 0},
   {"OUTSIDE TRIPLE TWIN WAVES OF 3",        concept_in_out_std,              D, l_c4a,
    UC_none, 48+8+3, CONCPROP__NEEDK_3X6, 0},
   {"CENTER PHANTOM COLUMNS",                concept_in_out_std,              D, l_c3,
    UC_none, 16+0,   CONCPROP__NEEDK_QUAD_1X4, 0},
   {"OUTSIDE PHANTOM COLUMNS",               concept_in_out_std,              D, l_c3,
    UC_none, 16+8+0, CONCPROP__NEEDK_QUAD_1X4, 0},
   {"CENTER PHANTOM LINES",                  concept_in_out_std,              D, l_c3,
    UC_none, 16+1, CONCPROP__NEEDK_QUAD_1X4, 0},
   {"OUTSIDE PHANTOM LINES",                 concept_in_out_std,              D, l_c3,
    UC_none, 16+8+1, CONCPROP__NEEDK_QUAD_1X4, 0},
   {"CENTER PHANTOM WAVES",                  concept_in_out_std,              D, l_c3,
    UC_none, 16+3, CONCPROP__NEEDK_QUAD_1X4, 0},
   {"OUTSIDE PHANTOM WAVES",                 concept_in_out_std,              D, l_c3,
    UC_none, 16+8+3, CONCPROP__NEEDK_QUAD_1X4, 0},
   {"CENTER PHANTOM BOXES",                  concept_in_out_nostd,            D, l_c4a,
    UC_none, 16+4, CONCPROP__NEEDK_2X8, 0},
   {"OUTSIDE PHANTOM BOXES",                 concept_in_out_nostd,            D, l_c4a,
    UC_none, 16+8+4, CONCPROP__NEEDK_2X8, 0},
   {"CENTER PHANTOM DIAMONDS",               concept_in_out_nostd,            D, l_c4a,
    UC_none, 16+5, CONCPROP__NEEDK_4D_4PTPD, CMD_MISC__VERIFY_DMD_LIKE},
   {"OUTSIDE PHANTOM DIAMONDS",              concept_in_out_nostd,            D, l_c4a,
    UC_none, 16+8+5, CONCPROP__NEEDK_4D_4PTPD, CMD_MISC__VERIFY_DMD_LIKE},
   {"CENTER PHANTOM DIAMOND SPOTS",          concept_in_out_nostd,            D, l_c4a,
    UC_none, 16+5, CONCPROP__NEEDK_4D_4PTPD, 0},
   {"OUTSIDE PHANTOM DIAMOND SPOTS",         concept_in_out_nostd,            D, l_c4a,
    UC_none, 16+8+5, CONCPROP__NEEDK_4D_4PTPD, 0},
   {"CENTER PHANTOM GENERAL 1/4 TAGS",       concept_in_out_nostd,            D, l_c4a,
    UC_none, 16+5, CONCPROP__NEEDK_4D_4PTPD, CMD_MISC__VERIFY_QTAG_LIKE},
   {"OUTSIDE PHANTOM GENERAL 1/4 TAGS",      concept_in_out_nostd,            D, l_c4a,
    UC_none, 16+8+5, CONCPROP__NEEDK_4D_4PTPD, CMD_MISC__VERIFY_QTAG_LIKE},
   {"12 MATRIX CENTER PHANTOM COLUMNS",      concept_in_out_std,              D, l_c4,
    UC_none, 64+0,   0, 0},
   {"12 MATRIX OUTSIDE PHANTOM COLUMNS",     concept_in_out_std,              D, l_c4,
    UC_none, 64+8+0, 0, 0},
   {"12 MATRIX CENTER PHANTOM LINES",        concept_in_out_std,              D, l_c4,
    UC_none, 64+1, 0, 0},
   {"12 MATRIX OUTSIDE PHANTOM LINES",       concept_in_out_std,              D, l_c4,
    UC_none, 64+8+1, 0, 0},
   {"TWIN PHANTOM DIAMONDS",                 concept_do_twinphantom_diamonds, D, l_c4,
    UC_none, phantest_impossible, CONCPROP__NEEDK_TWINDMD, CMD_MISC__VERIFY_DMD_LIKE, 0},
   {"TWIN PHANTOM DIAMOND SPOTS",            concept_do_twinphantom_diamonds, D, l_c4,
    UC_none, phantest_impossible, CONCPROP__NEEDK_4X6, 0, 0},
   {"TWIN PHANTOM 1/4 TAGS",                 concept_do_twinphantom_diamonds, D, l_c4,
    UC_none, phantest_impossible, CONCPROP__NEEDK_TWINQTAG, CMD_MISC__VERIFY_1_4_TAG, 0},
   {"TWIN PHANTOM 3/4 TAGS",                 concept_do_twinphantom_diamonds, D, l_c4,
    UC_none, phantest_impossible, CONCPROP__NEEDK_TWINQTAG, CMD_MISC__VERIFY_3_4_TAG, 0},
   {"TWIN PHANTOM 1/4 LINES",                concept_do_twinphantom_diamonds, D, l_c4,
    UC_none, phantest_impossible, CONCPROP__NEEDK_TWINQTAG, CMD_MISC__VERIFY_REAL_1_4_LINE,0},
   {"TWIN PHANTOM 3/4 LINES",                concept_do_twinphantom_diamonds, D, l_c4,
    UC_none, phantest_impossible, CONCPROP__NEEDK_TWINQTAG, CMD_MISC__VERIFY_REAL_3_4_LINE,0},
   {"TWIN PHANTOM GENERAL 1/4 TAGS",         concept_do_twinphantom_diamonds, D, l_c4,
    UC_none, phantest_impossible, CONCPROP__NEEDK_TWINQTAG, CMD_MISC__VERIFY_QTAG_LIKE, 0},
   {"TWIN PHANTOM POINT-TO-POINT DIAMONDS",  concept_do_twinphantom_diamonds, D, l_c4,
    UC_none, phantest_impossible, CONCPROP__NEEDK_TWINDMD, CMD_MISC__VERIFY_DMD_LIKE, 1},
   {"TWIN PHANTOM POINT-TO-POINT DIAMOND SPOTS", concept_do_twinphantom_diamonds,D, l_c4,
    UC_none, phantest_impossible, CONCPROP__NEEDK_4X6, 0, 1},
   {"TWIN PHANTOM I's",                      concept_do_divided_bones,        D, l_c4,
    UC_none, phantest_impossible, 0, 0, 0},
   {"TWIN PHANTOM BONES",                    concept_do_divided_bones,        D, l_c4,
    UC_none, phantest_impossible, 0, 0, 0},
   {"TWIN PHANTOM BATS",                     concept_do_divided_bones,        D, l_c4,
    UC_none, phantest_impossible, 1, 0, 0},
   {"TWIN PHANTOM RIGGERS",                  concept_do_divided_bones,        D, l_c4,
    UC_none, phantest_impossible, 1, 0, 0},
   {"CRAZY Z's",                             concept_crazy,                   D, l_c3,
    UC_none, 0, 0, 1},
   {"REVERSE CRAZY Z's",                     concept_crazy,                   D, l_c3,
    UC_none, 1, 0, 1},
   {"@a CRAZY Z's",                          concept_frac_crazy,              D, l_c3,
    UC_none, 0, 1, 1},
   {"@a REVERSE CRAZY Z's",                  concept_frac_crazy,              D, l_c3,
    UC_none, 1, 1, 1},
   {"CRAZY PHANTOM COLUMNS",                 concept_phan_crazy,              D, l_c4,
    UC_none, 0, CONCPROP__NEEDK_4X4, CMD_MISC__VERIFY_COLS},
   {"REVERSE CRAZY PHANTOM COLUMNS",         concept_phan_crazy,              D, l_c4,
    UC_none, 8+0, CONCPROP__NEEDK_4X4, CMD_MISC__VERIFY_COLS},
   {"@a CRAZY PHANTOM COLUMNS",              concept_frac_phan_crazy,         D, l_c4,
    UC_none, 16+0, CONCPROP__NEEDK_4X4, CMD_MISC__VERIFY_COLS},
   {"@a REVERSE CRAZY PHANTOM COLUMNS",      concept_frac_phan_crazy,         D, l_c4,
    UC_none, 16+8+0, CONCPROP__NEEDK_4X4, CMD_MISC__VERIFY_COLS},
   {"CRAZY PHANTOM LINES",                   concept_phan_crazy,              D, l_c4,
    UC_none, 1, CONCPROP__NEEDK_4X4, CMD_MISC__VERIFY_LINES},
   {"REVERSE CRAZY PHANTOM LINES",           concept_phan_crazy,              D, l_c4,
    UC_none, 8+1, CONCPROP__NEEDK_4X4, CMD_MISC__VERIFY_LINES},
   {"@a CRAZY PHANTOM LINES",                concept_frac_phan_crazy,         D, l_c4,
    UC_none, 16+1, CONCPROP__NEEDK_4X4, CMD_MISC__VERIFY_LINES},
   {"@a REVERSE CRAZY PHANTOM LINES",        concept_frac_phan_crazy,         D, l_c4,
    UC_none, 16+8+1, CONCPROP__NEEDK_4X4, CMD_MISC__VERIFY_LINES},
   {"CRAZY PHANTOM WAVES",                   concept_phan_crazy,              D, l_c4,
    UC_none, 3, CONCPROP__NEEDK_4X4, CMD_MISC__VERIFY_WAVES},
   {"REVERSE CRAZY PHANTOM WAVES",           concept_phan_crazy,              D, l_c4,
    UC_none, 8+3, CONCPROP__NEEDK_4X4, CMD_MISC__VERIFY_WAVES},
   {"@a CRAZY PHANTOM WAVES",                concept_frac_phan_crazy,         D, l_c4,
    UC_none, 16+3, CONCPROP__NEEDK_4X4, CMD_MISC__VERIFY_WAVES},
   {"@a REVERSE CRAZY PHANTOM WAVES",        concept_frac_phan_crazy,         D, l_c4,
    UC_none, 16+8+3, CONCPROP__NEEDK_4X4, CMD_MISC__VERIFY_WAVES},
   {"CRAZY OFFSET COLUMNS",                  concept_phan_crazy,              D, l_c4,
    UC_none, 64+0, CONCPROP__NEEDK_4X4, CMD_MISC__VERIFY_COLS},
   {"REVERSE CRAZY OFFSET COLUMNS",          concept_phan_crazy,              D, l_c4,
    UC_none, 64+8+0, CONCPROP__NEEDK_4X4, CMD_MISC__VERIFY_COLS},
   {"@a CRAZY OFFSET COLUMNS",               concept_frac_phan_crazy,         D, l_c4,
    UC_none, 64+16+0, CONCPROP__NEEDK_4X4, CMD_MISC__VERIFY_COLS},
   {"@a REVERSE CRAZY OFFSET COLUMNS",       concept_frac_phan_crazy,         D, l_c4,
    UC_none, 64+16+8+0, CONCPROP__NEEDK_4X4, CMD_MISC__VERIFY_COLS},
   {"CRAZY OFFSET LINES",                    concept_phan_crazy,              D, l_c4,
    UC_none, 64+1, CONCPROP__NEEDK_4X4, CMD_MISC__VERIFY_LINES},
   {"REVERSE CRAZY OFFSET LINES",            concept_phan_crazy,              D, l_c4,
    UC_none, 64+8+1, CONCPROP__NEEDK_4X4, CMD_MISC__VERIFY_LINES},
   {"@a CRAZY OFFSET LINES",                 concept_frac_phan_crazy,         D, l_c4,
    UC_none, 64+16+1, CONCPROP__NEEDK_4X4, CMD_MISC__VERIFY_LINES},
   {"@a REVERSE CRAZY OFFSET LINES",         concept_frac_phan_crazy,         D, l_c4,
    UC_none, 64+16+8+1, CONCPROP__NEEDK_4X4, CMD_MISC__VERIFY_LINES},
   {"CRAZY OFFSET WAVES",                    concept_phan_crazy,              D, l_c4,
    UC_none, 64+3, CONCPROP__NEEDK_4X4, CMD_MISC__VERIFY_WAVES},
   {"REVERSE CRAZY OFFSET WAVES",            concept_phan_crazy,              D, l_c4,
    UC_none, 64+8+3, CONCPROP__NEEDK_4X4, CMD_MISC__VERIFY_WAVES},
   {"@a CRAZY OFFSET WAVES",                 concept_frac_phan_crazy,         D, l_c4,
    UC_none, 64+16+3, CONCPROP__NEEDK_4X4, CMD_MISC__VERIFY_WAVES},
   {"@a REVERSE CRAZY OFFSET WAVES",         concept_frac_phan_crazy,         D, l_c4,
    UC_none, 64+16+8+3, CONCPROP__NEEDK_4X4, CMD_MISC__VERIFY_WAVES},
   {"CRAZY PHANTOM BOXES",                   concept_phan_crazy,              D, l_c4,
    UC_none, 4,      CONCPROP__NEEDK_2X8, 0},
   {"REVERSE CRAZY PHANTOM BOXES",           concept_phan_crazy,              D, l_c4,
    UC_none, 8+4,    CONCPROP__NEEDK_2X8, 0},
   {"@a CRAZY PHANTOM BOXES",                concept_frac_phan_crazy,         D, l_c4,
    UC_none, 16+4,   CONCPROP__NEEDK_2X8, 0},
   {"@a REVERSE CRAZY PHANTOM BOXES",        concept_frac_phan_crazy,         D, l_c4,
    UC_none, 16+8+4, CONCPROP__NEEDK_2X8, 0},
   {"CRAZY DIAGONAL BOXES",                  concept_phan_crazy,              D, l_c4,
    UC_none, 64+4, CONCPROP__NEEDK_4X4, 0},
   {"REVERSE CRAZY DIAGONAL BOXES",          concept_phan_crazy,              D, l_c4,
    UC_none, 64+8+4, CONCPROP__NEEDK_4X4, 0},
   {"@a CRAZY DIAGONAL BOXES",               concept_frac_phan_crazy,         D, l_c4,
    UC_none, 64+16+4, CONCPROP__NEEDK_4X4, 0},
   {"@a REVERSE CRAZY DIAGONAL BOXES",       concept_frac_phan_crazy,         D, l_c4,
    UC_none, 64+16+8+4, CONCPROP__NEEDK_4X4, 0},
   {"CRAZY PHANTOM DIAMONDS",                concept_phan_crazy,              D, l_c4,
    UC_none, 5, CONCPROP__NEEDK_4D_4PTPD, CMD_MISC__VERIFY_DMD_LIKE},
   {"REVERSE CRAZY PHANTOM DIAMONDS",        concept_phan_crazy,              D, l_c4,
    UC_none, 8+5, CONCPROP__NEEDK_4D_4PTPD, CMD_MISC__VERIFY_DMD_LIKE},
   {"@a CRAZY PHANTOM DIAMONDS",             concept_frac_phan_crazy,         D, l_c4,
    UC_none, 16+5, CONCPROP__NEEDK_4D_4PTPD, CMD_MISC__VERIFY_DMD_LIKE},
   {"@a REVERSE CRAZY PHANTOM DIAMONDS",     concept_frac_phan_crazy,         D, l_c4,
    UC_none, 16+8+5, CONCPROP__NEEDK_4D_4PTPD, CMD_MISC__VERIFY_DMD_LIKE},
   {"CRAZY PHANTOM DIAMOND SPOTS",           concept_phan_crazy,              D, l_c4,
    UC_none, 5, CONCPROP__NEEDK_4D_4PTPD, 0},
   {"REVERSE CRAZY PHANTOM DIAMOND SPOTS",   concept_phan_crazy,              D, l_c4,
    UC_none, 8+5, CONCPROP__NEEDK_4D_4PTPD, 0},
   {"@a CRAZY PHANTOM DIAMOND SPOTS",        concept_frac_phan_crazy,         D, l_c4,
    UC_none, 16+5, CONCPROP__NEEDK_4D_4PTPD, 0},
   {"@a REVERSE CRAZY PHANTOM DIAMOND SPOTS",concept_frac_phan_crazy,         D, l_c4,
    UC_none, 16+8+5, CONCPROP__NEEDK_4D_4PTPD, 0},
   {"CRAZY PHANTOM GENERAL 1/4 TAGS",        concept_phan_crazy,              D, l_c4,
    UC_none, 5, CONCPROP__NEEDK_4D_4PTPD, CMD_MISC__VERIFY_QTAG_LIKE},
   {"REVERSE CRAZY PHANTOM GENERAL 1/4 TAGS",concept_phan_crazy,              D, l_c4,
    UC_none, 8+5, CONCPROP__NEEDK_4D_4PTPD, CMD_MISC__VERIFY_QTAG_LIKE},
   {"@a CRAZY PHANTOM GENERAL 1/4 TAGS",     concept_frac_phan_crazy,         D, l_c4,
    UC_none, 16+5, CONCPROP__NEEDK_4D_4PTPD, CMD_MISC__VERIFY_QTAG_LIKE},
   {"@a REVERSE CRAZY PHANTOM GENERAL 1/4 TAGS",concept_frac_phan_crazy,      D, l_c4,
    UC_none, 16+8+5, CONCPROP__NEEDK_4D_4PTPD, CMD_MISC__VERIFY_QTAG_LIKE},
   {"BIG BLOCK",                             concept_do_phantom_2x4,          D, l_c3a,
    UC_none, phantest_only_one, DISTORTKEY_DIST_CLW*16+1, MPKIND__STAG, 0},
   {"STAIRSTEP LINES",                       concept_do_phantom_2x4,          D, l_c4,
    UC_none, phantest_only_one, DISTORTKEY_DIST_CLW*16+1, MPKIND__NONE, spcmap_ladder},
   {"LADDER LINES",                          concept_do_phantom_2x4,          D, l_c4,
    UC_none, phantest_only_one, DISTORTKEY_DIST_CLW*16+1, MPKIND__NONE, spcmap_stairst},
   {"OFFSET LINES",                          concept_distorted,               D, l_c2,
    UC_none, disttest_offset, 0, 0, DISTORTKEY_DIST_CLW*16+1},
   {"OFFSET LINE",                           concept_distorted,               D, l_c2,
    UC_none, disttest_offset, 0, 0, DISTORTKEY_OFFSCLW_SINGULAR*16+1},
   {"OFFSET TRIPLE LINES",                   concept_distorted,               D, l_c4a,
    UC_none, disttest_offset, CONCPROP__NEEDK_4X4, 0, DISTORTKEY_OFFS_TRIPLECLW*16+1},
   {"Z LINES",                               concept_distorted,               D, l_c4,
    UC_none, disttest_z, 0, 0, DISTORTKEY_DIST_CLW*16+1},
   {"DISTORTED LINES",                       concept_distorted,               D, l_c3,
    UC_none, disttest_any, 0, 0, DISTORTKEY_DIST_CLW*16+1},
   {"DIAGONAL LINE",                         concept_single_diagonal,         D, l_c1,
    UC_none, LOOKUP_DIAG_CLW+1},
   {"@6 IN YOUR DIAGONAL LINE",              concept_so_and_so_only,          D, l_c1,
    UC_none, selective_key_disc_dist, 0, LOOKUP_DIAG_CLW+1},
   {"@6 IN YOUR OFFSET LINE",                concept_so_and_so_only,          D, l_c1,
    UC_none, selective_key_disc_dist, 0, LOOKUP_OFFS_CLW+1},
   {"@6 IN YOUR STAGGERED LINE",             concept_so_and_so_only,          D, l_c2,
    UC_none, selective_key_disc_dist, 0, LOOKUP_STAG_CLW+1},
   {"DIAGONAL LINES",                        concept_double_diagonal,         D, l_c4a,
    UC_none, 1, 0},
   {"DIAGONAL LINES OF 3",                   concept_double_diagonal,         D, l_c1,
    UC_none, 1, 1},
   {"STAGGERED LINES OF 3",                  concept_distorted,               D, l_c3,
    UC_none, disttest_any, 0, 0, DISTORTKEY_STAGGER_CLW_OF_3*16+1},
   {"LINES OF 3",                            concept_distorted,               D, l_c1,
    UC_none, disttest_any, 0, 0, DISTORTKEY_CLW_OF_3*16+1},
   {"OFFSET TIDAL LINE",                     concept_distorted,               D, l_c3,
    UC_none, disttest_offset, 0, 0, DISTORTKEY_TIDALCLW*16+1},
   {"DISTORTED TIDAL LINE",                  concept_distorted,               D, l_c3,
    UC_none, disttest_any, 0, 0, DISTORTKEY_TIDALCLW*16+1},
   {"DISTORTED LINE OF 6",                   concept_double_diagonal,         D, l_c3,
    UC_none, 1, 2},
   {"BENT LINES",                            concept_dblbent,                 D, l_c4,
    UC_none, 1},
   {"DOUBLE BENT TIDAL LINE",                concept_dblbent,                 D, l_c4,
    UC_none, 8+1},
   {"@6 IN YOUR DOUBLE BENT LINE",           concept_so_and_so_only,          D, l_c4,
    UC_none, selective_key_disc_dist, 0, LOOKUP_DBL_BENT+1},
   {"@6 IN YOUR DISTORTED LINE",             concept_so_and_so_only,          D, l_c1,
    UC_none, selective_key_disc_dist, 0, 1},
   {"PHANTOM BIG BLOCK LINES",               concept_do_phantom_2x4,          D, l_c4,
    UC_none, phantest_both, DISTORTKEY_DIST_CLW*16+1, MPKIND__STAG, 0},
   {"PHANTOM STAIRSTEP LINES",               concept_do_phantom_2x4,          D, l_c4,
    UC_none, phantest_both, DISTORTKEY_DIST_CLW*16+1, MPKIND__NONE, spcmap_ladder},
   {"PHANTOM LADDER LINES",                  concept_do_phantom_2x4,          D, l_c4,
    UC_none, phantest_both, DISTORTKEY_DIST_CLW*16+1, MPKIND__NONE, spcmap_stairst},
   {"PHANTOM OFFSET LINES",                  concept_do_phantom_2x4,          D, l_c4,
    UC_pofl, phantest_both, DISTORTKEY_DIST_CLW*16+1, MPKIND__OFFS_BOTH_FULL, 0},
   {"OFFSET TRIPLE LINES WORKING FORWARD",   concept_multiple_lines_tog,      D, l_c4a,
    UC_none, 0,  CONCPROP__NEEDK_4X4, 1, 16+3},
   {"OFFSET TRIPLE LINES WORKING BACKWARD",  concept_multiple_lines_tog,      D, l_c4a,
    UC_none, 2,  CONCPROP__NEEDK_4X4, 1, 16+3},
   {"OFFSET TRIPLE LINES WORKING CLOCKWISE", concept_multiple_lines_tog_std,  D, l_c4,
    UC_none, 8,  CONCPROP__NEEDK_4X4, 1, 16+3},
   {"OFFSET TRIPLE LINES WORKING COUNTERCLOCKWISE",concept_multiple_lines_tog_std,D,l_c4,
    UC_none, 9,  CONCPROP__NEEDK_4X4, 1, 16+3},
   {"PARALLELOGRAM",                         concept_parallelogram,           D, l_c2,
    UC_none, 0},
   {"PARALLELOGRAM DIAMONDS",                concept_parallelogram,           D, l_c3a,
    UC_none, 1},
   {"OFFSET 1/4 TAG",                        concept_distorted,               D, l_c4,
    UC_none, disttest_any, 0, CMD_MISC__VERIFY_1_4_TAG, DISTORTKEY_OFFS_QTAG*16},
   {"OFFSET 3/4 TAG",                        concept_distorted,               D, l_c4,
    UC_none, disttest_any, 0, CMD_MISC__VERIFY_3_4_TAG, DISTORTKEY_OFFS_QTAG*16},
   {"STAGGER DIAMONDS",                      concept_do_phantom_stag_qtg,     D, l_c4,
    UC_none, phantest_only_one, 1, CMD_MISC__VERIFY_DMD_LIKE},
   {"STAGGER 1/4 TAG",                       concept_do_phantom_stag_qtg,     D, l_c4,
    UC_none, phantest_only_one, 0, CMD_MISC__VERIFY_1_4_TAG},
   {"STAGGER 3/4 TAG",                       concept_do_phantom_stag_qtg,     D, l_c4,
    UC_none, phantest_only_one, 0, CMD_MISC__VERIFY_3_4_TAG},
   {"STAGGER 1/4 LINE",                      concept_do_phantom_stag_qtg,     D, l_c4,
    UC_none, phantest_only_one, 0, CMD_MISC__VERIFY_REAL_1_4_LINE},
   {"STAGGER 3/4 LINE",                      concept_do_phantom_stag_qtg,     D, l_c4,
    UC_none, phantest_only_one, 0, CMD_MISC__VERIFY_REAL_3_4_LINE},
   {"STAGGER GENERAL 1/4 TAG",               concept_do_phantom_stag_qtg,     D, l_c4,
    UC_none, phantest_only_one, 0, CMD_MISC__VERIFY_QTAG_LIKE},
   {"DIAGONAL DIAMONDS",                     concept_do_phantom_diag_qtg,     D, l_c4,
    UC_none, phantest_only_one, 1, CMD_MISC__VERIFY_DMD_LIKE},
   {"DIAGONAL 1/4 TAG",                      concept_do_phantom_diag_qtg,     D, l_c4,
    UC_none, phantest_only_one, 0, CMD_MISC__VERIFY_1_4_TAG},
   {"DIAGONAL 3/4 TAG",                      concept_do_phantom_diag_qtg,     D, l_c4,
    UC_none, phantest_only_one, 0, CMD_MISC__VERIFY_3_4_TAG},
   {"DIAGONAL 1/4 LINE",                     concept_do_phantom_diag_qtg,     D, l_c4,
    UC_none, phantest_only_one, 0, CMD_MISC__VERIFY_REAL_1_4_LINE},
   {"DIAGONAL 3/4 LINE",                     concept_do_phantom_diag_qtg,     D, l_c4,
    UC_none, phantest_only_one, 0, CMD_MISC__VERIFY_REAL_3_4_LINE},
   {"DIAGONAL GENERAL 1/4 TAG",              concept_do_phantom_diag_qtg,     D, l_c4,
    UC_none, phantest_only_one, 0, CMD_MISC__VERIFY_QTAG_LIKE},
   {"DISTORTED DIAMONDS",                    concept_distorted,               D, l_c4a,
    UC_none, disttest_any, 0, CMD_MISC__VERIFY_DMD_LIKE, DISTORTKEY_DIST_QTAG*16},
   {"DISTORTED 1/4 TAG",                     concept_distorted,               D, l_c4a,
    UC_none, disttest_any, 0, CMD_MISC__VERIFY_1_4_TAG, DISTORTKEY_DIST_QTAG*16},
   {"DISTORTED 3/4 TAG",                     concept_distorted,               D, l_c4a,
    UC_none, disttest_any, 0, CMD_MISC__VERIFY_3_4_TAG, DISTORTKEY_DIST_QTAG*16},
   {"DISTORTED 1/4 LINE",                    concept_distorted,               D, l_c4a,
    UC_none, disttest_any, 0, CMD_MISC__VERIFY_REAL_1_4_LINE, DISTORTKEY_DIST_QTAG*16},
   {"DISTORTED 3/4 LINE",                    concept_distorted,               D, l_c4a,
    UC_none, disttest_any, 0, CMD_MISC__VERIFY_REAL_3_4_LINE, DISTORTKEY_DIST_QTAG*16},
   {"DISTORTED GENERAL 1/4 TAG",             concept_distorted,               D, l_c4a,
    UC_none, disttest_any, 0, CMD_MISC__VERIFY_QTAG_LIKE, DISTORTKEY_DIST_QTAG*16},
   {"DISTORTED DIAMOND SPOTS",               concept_distorted,               D, l_c4a,
    UC_none, disttest_any, 0, 0, DISTORTKEY_DIST_QTAG*16},
   {"BIG BLOCK WAVES",                       concept_do_phantom_2x4,          D, l_c3a,
    UC_none, phantest_only_one, DISTORTKEY_DIST_CLW*16+3, MPKIND__STAG, 0},
   {"STAIRSTEP WAVES",                       concept_do_phantom_2x4,          D, l_c4,
    UC_none, phantest_only_one, DISTORTKEY_DIST_CLW*16+3, MPKIND__NONE, spcmap_ladder},
   {"LADDER WAVES",                          concept_do_phantom_2x4,          D, l_c4,
    UC_none, phantest_only_one, DISTORTKEY_DIST_CLW*16+3, MPKIND__NONE, spcmap_stairst},
   {"OFFSET WAVES",                          concept_distorted,               D, l_c2,
    UC_none, disttest_offset, 0, 0, DISTORTKEY_DIST_CLW*16+3},
   {"OFFSET WAVE",                           concept_distorted,               D, l_c2,
    UC_none, disttest_offset, 0, 0, DISTORTKEY_OFFSCLW_SINGULAR*16+3},
   {"OFFSET TRIPLE WAVES",                   concept_distorted,               D, l_c4a,
    UC_none, disttest_offset, CONCPROP__NEEDK_4X4, 0, DISTORTKEY_OFFS_TRIPLECLW*16+3},
   {"Z WAVES",                               concept_distorted,               D, l_c4,
    UC_none, disttest_z, 0, 0, DISTORTKEY_DIST_CLW*16+3},
   {"DISTORTED WAVES",                       concept_distorted,               D, l_c3,
    UC_none, disttest_any, 0, 0, DISTORTKEY_DIST_CLW*16+3},
   {"DIAGONAL WAVE",                         concept_single_diagonal,         D, l_c1,
    UC_none, LOOKUP_DIAG_CLW+3},
   {"@6 IN YOUR DIAGONAL WAVE",              concept_so_and_so_only,          D, l_c1,
    UC_none, selective_key_disc_dist, 0, LOOKUP_DIAG_CLW+3},
   {"@6 IN YOUR OFFSET WAVE",                concept_so_and_so_only,          D, l_c1,
    UC_none, selective_key_disc_dist, 0, LOOKUP_OFFS_CLW+3},
   {"@6 IN YOUR STAGGERED WAVE",             concept_so_and_so_only,          D, l_c2,
    UC_none, selective_key_disc_dist, 0, LOOKUP_STAG_CLW+3},
   {"DIAGONAL WAVES",                        concept_double_diagonal,         D, l_c4a,
    UC_none, 3, 0},
   {"DIAGONAL WAVES OF 3",                   concept_double_diagonal,         D, l_c1,
    UC_none, 3, 1},
   {"STAGGERED WAVES OF 3",                  concept_distorted,               D, l_c3,
    UC_none, disttest_any, 0, 0, DISTORTKEY_STAGGER_CLW_OF_3*16+3},
   {"WAVES OF 3",                            concept_distorted,               D, l_c1,
    UC_none, disttest_any, 0, 0, DISTORTKEY_CLW_OF_3*16+3},
   {"OFFSET TIDAL WAVE",                     concept_distorted,               D, l_c3,
    UC_none, disttest_offset, 0, 0, DISTORTKEY_TIDALCLW*16+3},
   {"DISTORTED TIDAL WAVE",                  concept_distorted,               D, l_c3,
    UC_none, disttest_any, 0, 0, DISTORTKEY_TIDALCLW*16+3},
   {"DISTORTED WAVE OF 6",                   concept_double_diagonal,         D, l_c3,
    UC_none, 3, 2},
   {"BENT WAVES",                            concept_dblbent,                 D, l_c4,
    UC_none, 3},
   {"DOUBLE BENT TIDAL WAVE",                concept_dblbent,                 D, l_c4,
    UC_none, 8+3},
   {"@6 IN YOUR DOUBLE BENT WAVE",           concept_so_and_so_only,          D, l_c4,
    UC_none, selective_key_disc_dist, 0, LOOKUP_DBL_BENT+3},
   {"@6 IN YOUR DISTORTED WAVE",             concept_so_and_so_only,          D, l_c1,
    UC_none, selective_key_disc_dist, 0, 3},
   {"PHANTOM BIG BLOCK WAVES",               concept_do_phantom_2x4,          D, l_c4,
    UC_none, phantest_both, DISTORTKEY_DIST_CLW*16+3, MPKIND__STAG, 0},
   {"PHANTOM STAIRSTEP WAVES",               concept_do_phantom_2x4,          D, l_c4,
    UC_none, phantest_both, DISTORTKEY_DIST_CLW*16+3, MPKIND__NONE, spcmap_ladder},
   {"PHANTOM LADDER WAVES",                  concept_do_phantom_2x4,          D, l_c4,
    UC_none, phantest_both, DISTORTKEY_DIST_CLW*16+3, MPKIND__NONE, spcmap_stairst},
   {"PHANTOM OFFSET WAVES",                  concept_do_phantom_2x4,          D, l_c4,
    UC_none, phantest_both, DISTORTKEY_DIST_CLW*16+3, MPKIND__OFFS_BOTH_FULL, 0},
   {"OFFSET TRIPLE WAVES WORKING FORWARD",   concept_multiple_lines_tog,      D, l_c4a,
    UC_none, 0,  CONCPROP__NEEDK_4X4, 3, 16+3},
   {"OFFSET TRIPLE WAVES WORKING BACKWARD",  concept_multiple_lines_tog,      D, l_c4a,
    UC_none, 2,  CONCPROP__NEEDK_4X4, 3, 16+3},
   {"OFFSET TRIPLE WAVES WORKING CLOCKWISE", concept_multiple_lines_tog_std,  D, l_c4,
    UC_none, 8,  CONCPROP__NEEDK_4X4, 3, 16+3},
   {"OFFSET TRIPLE WAVES WORKING COUNTERCLOCKWISE",concept_multiple_lines_tog_std,D,l_c4,
    UC_none, 9,  CONCPROP__NEEDK_4X4, 3, 16+3},
   {"@6 IN YOUR DISTORTED BOX",              concept_so_and_so_only,          D, l_c1,
    UC_none, selective_key_disc_dist, 0, LOOKUP_DIST_BOX},
   {"@6 IN YOUR DIAGONAL BOX",               concept_so_and_so_only,          D, l_c3,
    UC_none, selective_key_disc_dist, 0, LOOKUP_DIAG_BOX},
   {"@6 IN YOUR STAGGERED BOX",              concept_so_and_so_only,          D, l_c2,
    UC_none, selective_key_disc_dist, 0, LOOKUP_STAG_BOX},
   {"@6 IN YOUR TRAPEZOID",                  concept_so_and_so_only,          D, l_c3,
    UC_none, selective_key_disc_dist, 0, LOOKUP_TRAPEZOID},
   {"@6 IN YOUR DISTORTED DIAMOND",          concept_so_and_so_only,          D, l_c1,
    UC_none, selective_key_disc_dist, 0, LOOKUP_DIST_DMD+7},
   {"@6 IN YOUR Z",                          concept_so_and_so_only,          D, l_c3,
    UC_none, selective_key_disc_dist, 0, LOOKUP_Z},
   {"STAGGER",                               concept_do_phantom_2x4,          D, l_c2,
    UC_none, phantest_only_one, DISTORTKEY_DIST_CLW*16+0, MPKIND__STAG, 0},
   {"STAIRSTEP COLUMNS",                     concept_do_phantom_2x4,          D, l_c4,
    UC_none, phantest_only_one, DISTORTKEY_DIST_CLW*16+0, MPKIND__NONE, spcmap_stairst},
   {"LADDER COLUMNS",                        concept_do_phantom_2x4,          D, l_c4,
    UC_none, phantest_only_one, DISTORTKEY_DIST_CLW*16+0, MPKIND__NONE, spcmap_ladder},
   {"OFFSET COLUMNS",                        concept_distorted,               D, l_c2,
    UC_none, disttest_offset, 0, 0, DISTORTKEY_DIST_CLW*16+0},
   {"OFFSET COLUMN",                         concept_distorted,               D, l_c2,
    UC_none, disttest_offset, 0, 0, DISTORTKEY_OFFSCLW_SINGULAR*16+0},
   {"OFFSET TRIPLE COLUMNS",                 concept_distorted,               D, l_c4a,
    UC_none, disttest_offset, CONCPROP__NEEDK_4X4, 0, DISTORTKEY_OFFS_TRIPLECLW*16+0},
   {"Z COLUMNS",                             concept_distorted,               D, l_c4,
    UC_none, disttest_z, 0, 0, DISTORTKEY_DIST_CLW*16+0},
   {"DISTORTED COLUMNS",                     concept_distorted,               D, l_c3,
    UC_none, disttest_any, 0, 0, DISTORTKEY_DIST_CLW*16+0},
   {"DIAGONAL COLUMN",                       concept_single_diagonal,         D, l_c1,
    UC_none, LOOKUP_DIAG_CLW+2},
   {"@6 IN YOUR DIAGONAL COLUMN",            concept_so_and_so_only,          D, l_c1,
    UC_none, selective_key_disc_dist, 0, LOOKUP_DIAG_CLW+2},
   {"@6 IN YOUR OFFSET COLUMN",              concept_so_and_so_only,          D, l_c1,
    UC_none, selective_key_disc_dist, 0, LOOKUP_OFFS_CLW+2},
   {"@6 IN YOUR STAGGERED COLUMN",           concept_so_and_so_only,          D, l_c2,
    UC_none, selective_key_disc_dist, 0, LOOKUP_STAG_CLW+2},
   {"DIAGONAL COLUMNS",                      concept_double_diagonal,         D, l_c4a,
    UC_none, 0, 0},
   {"DIAGONAL COLUMNS OF 3",                 concept_double_diagonal,         D, l_c1,
    UC_none, 0, 1},
   {"STAGGERED COLUMNS OF 3",                concept_distorted,               D, l_c3,
    UC_none, disttest_any, 0, 0, DISTORTKEY_STAGGER_CLW_OF_3*16+0},
   {"COLUMNS OF 3",                          concept_distorted,               D, l_c1,
    UC_none, disttest_any, 0, 0, DISTORTKEY_CLW_OF_3*16+0},
   {"OFFSET TIDAL COLUMN",                   concept_distorted,               D, l_c3,
    UC_none, disttest_offset, 0, 0, DISTORTKEY_TIDALCLW*16+0},
   {"DISTORTED TIDAL COLUMN",                concept_distorted,               D, l_c3,
    UC_none, disttest_any, 0, 0, DISTORTKEY_TIDALCLW*16+0},
   {"DISTORTED COLUMN OF 6",                 concept_double_diagonal,         D, l_c3,
    UC_none, 0, 2},
   {"BENT COLUMNS",                          concept_dblbent,                 D, l_c4,
    UC_none, 0},
   {"DOUBLE BENT TIDAL COLUMN",              concept_dblbent,                 D, l_c4,
    UC_none, 8+0},
   {"@6 IN YOUR DOUBLE BENT COLUMN",         concept_so_and_so_only,          D, l_c4,
    UC_none, selective_key_disc_dist, 0, LOOKUP_DBL_BENT+2},
   {"@6 IN YOUR DISTORTED COLUMN",           concept_so_and_so_only,          D, l_c1,
    UC_none, selective_key_disc_dist, 0, 2},
   {"PHANTOM STAGGER COLUMNS",               concept_do_phantom_2x4,          D, l_c4,
    UC_none, phantest_both, DISTORTKEY_DIST_CLW*16+0, MPKIND__STAG, 0},
   {"PHANTOM STAIRSTEP COLUMNS",             concept_do_phantom_2x4,          D, l_c4,
    UC_none, phantest_both, DISTORTKEY_DIST_CLW*16+0, MPKIND__NONE, spcmap_stairst},
   {"PHANTOM LADDER COLUMNS",                concept_do_phantom_2x4,          D, l_c4,
    UC_none, phantest_both, DISTORTKEY_DIST_CLW*16+0, MPKIND__NONE, spcmap_ladder},
   {"PHANTOM OFFSET COLUMNS",                concept_do_phantom_2x4,          D, l_c4,
    UC_pofc, phantest_both, DISTORTKEY_DIST_CLW*16+0, MPKIND__OFFS_BOTH_FULL, 0},
   {"O",                                     concept_do_phantom_2x4,          D, l_c1,
    UC_none, phantest_only_first_one, DISTORTKEY_DIST_CLW*16+0, MPKIND__O_SPOTS, 0},
   {"BUTTERFLY",                             concept_do_phantom_2x4,          D, l_c1,
    UC_none, phantest_only_second_one, DISTORTKEY_DIST_CLW*16+0, MPKIND__X_SPOTS, 0},
   {"PHANTOM BUTTERFLY OR O",                concept_do_phantom_2x4,          D, l_c4a,
    UC_pob, phantest_both, DISTORTKEY_DIST_CLW*16+0, MPKIND__NONE, spcmap_but_o},
   {"OX",                                    concept_do_phantom_2x4,          D, l_c3,
    UC_none, phantest_only_one, DISTORTKEY_DIST_CLW*16+0, MPKIND__OX, 0},
   {"OFFSET TRIPLE COLUMNS WORKING RIGHT",   concept_multiple_lines_tog,      D, l_c4a,
    UC_none, 2,  CONCPROP__NEEDK_4X4, 0, 16+3},
   {"OFFSET TRIPLE COLUMNS WORKING LEFT",    concept_multiple_lines_tog,      D, l_c4a,
    UC_none, 0,  CONCPROP__NEEDK_4X4, 0, 16+3},
   {"OFFSET TRIPLE COLUMNS WORKING CLOCKWISE",concept_multiple_lines_tog_std, D, l_c4,
    UC_none, 8,  CONCPROP__NEEDK_4X4, 0, 16+3},
   {"OFFSET TRIPLE COLUMNS WORKING COUNTERCLOCKWISE",concept_multiple_lines_tog_std,D,l_c4,
    UC_none, 9,  CONCPROP__NEEDK_4X4, 0, 16+3},
   {"BENT BOXES",                            concept_dblbent,                 D, l_c4,
    UC_none, 16+4},
   {"SPLIT",                                 concept_split,                 L+D, l_mainstream,
    UC_none},
   {"ONCE REMOVED",                          concept_once_removed,            D, l_c2,
    UC_none, 0, 0, 0},
   {"TWICE REMOVED",                         concept_once_removed,            D, l_c4a,
    UC_none, 2, 0, 0},
   {"THRICE REMOVED",                        concept_once_removed,            D, l_c4a,
    UC_none, 3, 0, 0},
   {"ONCE REMOVED DIAMONDS",                 concept_once_removed,            D, l_c3a,
    UC_none, 1, 0, CMD_MISC__VERIFY_DMD_LIKE},
   {"MAGIC",                                 concept_magic,                 L+D, l_c1,
    UC_magic},
   {"DIAGONAL BOX",                          concept_c1_phantom,              D, l_c3,
    UC_none, 0, 97},
   {"TRAPEZOID",                             concept_do_both_boxes,           D, l_c3,
    UC_none, spcmap_2x4_trapezoid, 97, false},
   {"OVERLAPPED DIAMONDS",                   concept_overlapped_diamond,      D, l_c4,
    UC_none, 0},
   {"OVERLAPPED LINES",                      concept_overlapped_diamond,      D, l_c4,
    UC_none, 1},
   {"OVERLAPPED WAVES",                      concept_overlapped_diamond,      D, l_c4,
    UC_none, 3},
   {"INTERLOCKED PARALLELOGRAM",             concept_do_both_boxes,           D, l_c4,
    UC_none, spcmap_2x4_int_pgram, 97, true},
   {"INTERLOCKED BOXES",                     concept_misc_distort,            D, l_c3x,
    UC_none, 3, 0, 0},
   {"TWIN PARALLELOGRAMS",                   concept_misc_distort,            D, l_c3x,
    UC_none, 2, 0, 0},
   {"Z",                                     concept_misc_distort,            D, l_c3,
    UC_none, 0, 0, 0, 16+1},
   {"EACH Z",                                concept_misc_distort,            D, l_c3,
    UC_none, 0, 0, 0, 2},
   {"INTERLOCKED Z's",                       concept_misc_distort,            D, l_c4a,
    UC_none, 0, 0, 8, 2},
   {"Z DIAMOND",                             concept_misc_distort,            D, l_c4,
    UC_none, 6, 0, 0, 1},
   {"Z DIAMONDS",                            concept_misc_distort,            D, l_c4,
    UC_none, 6, 0, 0, 2},
   {"JAY",                                   concept_misc_distort,            D, l_c3a,
    UC_none, 1, 0, 0,  0x00000000},
   {"BACK-TO-FRONT JAY",                     concept_misc_distort,            D, l_c3a,
    UC_none, 1, 0, 8,  0x00000000},
   {"BACK-TO-BACK JAY",                      concept_misc_distort,            D, l_c3a,
    UC_none, 1, 0, 16, 0x00000000},
   {"FRONT JAY",                             concept_misc_distort,            D, l_c3a,
    UC_none, 1, 0, 0,  0x00000000},
   {"BACK JAY",                              concept_misc_distort,            D, l_c3a,
    UC_none, 1, 0, 0,  0xAAAAAAAA},
   {"LEFT JAY",                              concept_misc_distort,            D, l_c3a,
    UC_none, 1, 0, 0,  0x55555555},
   {"RIGHT JAY",                             concept_misc_distort,            D, l_c3a,
    UC_none, 1, 0, 0,  0xFFFFFFFF},
   {"CLOCKWISE JAY",                         concept_misc_distort,            D, l_c3a,
    UC_none, 8, 0, 0,  0},
   {"COUNTERCLOCKWISE JAY",                  concept_misc_distort,            D, l_c3a,
    UC_none, 8, 0, 0,  1},
   {"FACING PARALLELOGRAM",                  concept_misc_distort,            D, l_c3a,
    UC_none, 4, 0, 0},
   {"BACK-TO-FRONT PARALLELOGRAM",           concept_misc_distort,            D, l_c3a,
    UC_none, 4, 0, 8},
   {"BACK-TO-BACK PARALLELOGRAM",            concept_misc_distort,            D, l_c3a,
    UC_none, 4, 0, 16},
   {"BLOCKS",                                concept_do_blocks_2x2,           D, l_c1,
    UC_none, spcmap_blocks, phantest_2x2_only_two},
   {"IN YOUR BLOCKS",                        concept_do_blocks_2x2,           D, l_c1,
    UC_none, spcmap_blocks, phantest_2x2_only_two},
   {"4 PHANTOM INTERLOCKED BLOCKS",          concept_do_phantom_2x2,          D, l_c4,
    UC_pibl, spcmap_blocks, phantest_2x2_both},
   {"TRIANGULAR BOXES",                      concept_triangular_boxes,        D, l_c4,
    UC_none, phantest_2x2_only_two, 0},
   {"4 PHANTOM TRIANGULAR BOXES",            concept_triangular_boxes,        D, l_c4,
    UC_none, phantest_2x2_both, CONCPROP__NEEDK_4X4},
   {"DISTORTED BLOCKS",                      concept_misc_distort,            D, l_c4a,
    UC_none, 5, 0, 0},
   {"LEFT",                                  concept_left,                  L+D, l_mainstream,
    UC_left},
   {"REVERSE",                               concept_reverse,               L+D, l_mainstream,
    UC_none},
   {"CROSS",                                 concept_cross,                 L+D, l_mainstream,
    UC_cross},
   {"SINGLE",                                concept_single,                L+D, l_mainstream,
    UC_none},
   {"SINGLE FILE",                           concept_singlefile,            L+D, l_mainstream,
    UC_none},  // Not C3?  No, mainstream, for dixie style.
   {"GRAND",                                 concept_grand,                 L+D, l_plus,
    UC_grand},
   {"MIRROR",                                concept_mirror,                  D, l_c3,
    UC_none},
   {"TRIANGLE",                              concept_triangle,                D, l_c1,
    UC_none},
   {"LEADING TRIANGLE",                      concept_leadtriangle,            D, l_c4,
    UC_none},
   {"DIAMOND",                               concept_diamond,                 D, l_c4,
    UC_none},
   {"INTERLOCKED",                           concept_interlocked,           L+D, l_c1,
    UC_intlk},
   {"12 MATRIX",                             concept_12_matrix,               D, l_c3x,
    UC_none},
   {"16 MATRIX",                             concept_16_matrix,               D, l_c3x,
    UC_none},
   {"PHANTOM",                               concept_c1_phantom,            L+D, l_c1,
    UC_phan, 0, 0},
   {"FUNNY",                                 concept_funny,                   D, l_c2,
    UC_none},
   {"2-FACED",                               concept_two_faced,               D, l_c3a,
    UC_none},
   {"TWO-FACED",                             concept_two_faced,               D, l_c3a,
    UC_none},
   {"MATRIX",                                concept_matrix,                G+D, l_c4,
    UC_none},
   {"ASSUME WAVES",                          concept_assume_waves,            D, l_c3a,
    UC_none, cr_wave_only,  0, 0},
   {"ASSUME MINIWAVES",                      concept_assume_waves,            D, l_c3a,
    UC_none, cr_miniwaves,  0, 0},
   {"ASSUME COUPLES",                        concept_assume_waves,            D, l_c3a,
    UC_none, cr_couples_only,0, 0},
   {"ASSUME TWO-FACED LINES",                concept_assume_waves,            D, l_c3a,
    UC_none, cr_2fl_only,   0, 0},
   {"ASSUME ONE-FACED LINES",                concept_assume_waves,            D, l_c3a,
    UC_none, cr_1fl_only,   0, 0},
   {"ASSUME INVERTED LINES",                 concept_assume_waves,            D, l_c3a,
    UC_none, cr_magic_only, 0, 0},
   {"ASSUME NORMAL BOXES",                   concept_assume_waves,            D, l_c3a,
    UC_none, cr_wave_only,  2, 0},
   {"ASSUME INVERTED BOXES",                 concept_assume_waves,            D, l_c3a,
    UC_none, cr_magic_only, 2, 0},
   {"ASSUME NORMAL COLUMNS",                 concept_assume_waves,            D, l_c3a,
    UC_none, cr_wave_only,  1, 0},
   {"ASSUME MAGIC COLUMNS",                  concept_assume_waves,            D, l_c3a,
    UC_none, cr_magic_only, 1, 0},
   {"ASSUME EIGHT CHAIN",                    concept_assume_waves,            D, l_c3a,
    UC_none, cr_li_lo,      1, 1},
   {"ASSUME TRADE BY",                       concept_assume_waves,            D, l_c3a,
    UC_none, cr_li_lo,      1, 2},
   {"ASSUME DPT",                            concept_assume_waves,            D, l_c3a,
    UC_none, cr_2fl_only,   1, 1},
   {"ASSUME CDPT",                           concept_assume_waves,            D, l_c3a,
    UC_none, cr_2fl_only,   1, 2},
   {"ASSUME FACING LINES",                   concept_assume_waves,            D, l_c3a,
    UC_none, cr_li_lo,      0, 1},
   {"ASSUME BACK-TO-BACK LINES",             concept_assume_waves,            D, l_c3a,
    UC_none, cr_li_lo,      0, 2},
   {"ASSUME GENERAL DIAMONDS",               concept_assume_waves,            D, l_c3a,
    UC_none, cr_diamond_like,0, 0},
   {"ASSUME GENERAL 1/4 TAGS",               concept_assume_waves,            D, l_c3a,
    UC_none, cr_qtag_like,  0, 0},
   {"ASSUME 1/4 TAGS",                       concept_assume_waves,            D, l_c3a,
    UC_none, cr_real_1_4_tag, 0, 0},
   {"ASSUME RIGHT 1/4 TAGS",                 concept_assume_waves,            D, l_c3a,
    UC_none, cr_jleft,      0, 2},
   {"ASSUME LEFT 1/4 TAGS",                  concept_assume_waves,            D, l_c3a,
    UC_none, cr_jright,     0, 2},
   {"ASSUME 3/4 TAGS",                       concept_assume_waves,            D, l_c3a,
    UC_none, cr_real_3_4_tag, 0, 0},
   {"ASSUME RIGHT 3/4 TAGS",                 concept_assume_waves,            D, l_c3a,
    UC_none, cr_jright,     0, 1},
   {"ASSUME LEFT 3/4 TAGS",                  concept_assume_waves,            D, l_c3a,
    UC_none, cr_jleft,      0, 1},
   {"ASSUME 1/4 LINES",                      concept_assume_waves,            D, l_c3a,
    UC_none, cr_real_1_4_line, 0, 0},
   {"ASSUME RIGHT 1/4 LINES",                concept_assume_waves,            D, l_c3a,
    UC_none, cr_ijleft,     0, 2},
   {"ASSUME LEFT 1/4 LINES",                 concept_assume_waves,            D, l_c3a,
    UC_none, cr_ijright,    0, 2},
   {"ASSUME 3/4 LINES",                      concept_assume_waves,            D, l_c3a,
    UC_none, cr_real_3_4_line, 0, 0},
   {"ASSUME RIGHT 3/4 LINES",                concept_assume_waves,            D, l_c3a,
    UC_none, cr_ijright,    0, 1},
   {"ASSUME LEFT 3/4 LINES",                 concept_assume_waves,            D, l_c3a,
    UC_none, cr_ijleft,     0, 1},
   {"ASSUME NORMAL DIAMONDS",                concept_assume_waves,            D, l_c3a,
    UC_none, cr_jright,     4, 0},
   {"ASSUME FACING DIAMONDS",                concept_assume_waves,            D, l_c3a,
    UC_none, cr_jleft,      4, 0},
   {"ASSUME NORMAL INTERLOCKED DIAMONDS",    concept_assume_waves,            D, l_c3a,
    UC_none, cr_ijright,    4, 0},
   {"ASSUME FACING INTERLOCKED DIAMONDS",    concept_assume_waves,            D, l_c3a,
    UC_none, cr_ijleft,     4, 0},
   {"ASSUME NORMAL CASTS",                   concept_assume_waves,            D, l_c3a,
    UC_none, cr_alwaysfail, 0, 0},
   {"WITH ACTIVE PHANTOMS",                  concept_active_phantoms,         D, l_c3a,
    UC_none},
   {"INVERT",                                concept_snag_mystic,           L+D, l_c4,
    UC_none, CMD_MISC2__SAID_INVERT},
   {"CENTRAL",                               concept_central,                 D, l_c3,
    UC_none, CMD_MISC2__DO_CENTRAL},
   {"INVERT CENTRAL",                        concept_central,                 D, l_c4,
    UC_none, CMD_MISC2__DO_CENTRAL | CMD_MISC2__INVERT_CENTRAL},
   {"SNAG",                                  concept_snag_mystic,             D, l_c4,
    UC_none, CMD_MISC2__CENTRAL_SNAG},
   {"INVERT SNAG",                           concept_snag_mystic,           F+D, l_c4,
    UC_none, CMD_MISC2__CENTRAL_SNAG | CMD_MISC2__INVERT_SNAG},
   {"SNAG THE @6",                           concept_so_and_so_only,        L+D, l_c4,
    UC_none, selective_key_snag_anyone, 1, 0},
   {"MYSTIC",                                concept_snag_mystic,             D, l_c4,
    UC_none, CMD_MISC2__CENTRAL_MYSTIC},
   {"INVERT MYSTIC",                         concept_snag_mystic,           F+D, l_c4,
    UC_none, CMD_MISC2__CENTRAL_MYSTIC | CMD_MISC2__INVERT_MYSTIC},
   {"FAN",                                   concept_fan,                   L+D, l_c3,
    UC_none},
   {"YOYO",                                  concept_yoyo,                  L+D, l_c4,
    UC_none},
   {"GENEROUS",                              concept_generous,              L+D, l_c3,
    UC_none},
   {"STINGY",                                concept_stingy,                L+D, l_c3,
    UC_none},
   {"FRACTAL",                               concept_fractal,               L+D, l_c4,
    UC_none},
   {"STRAIGHT",                              concept_straight,              L+D, l_c4,
    UC_none},
   {"TWISTED",                               concept_twisted,               L+D, l_c4,
    UC_none},
   {"REWIND",                                concept_rewind,                L+D, l_c4,
    UC_none},
   {"@6 ARE STANDARD IN",                    concept_standard,              L+D, l_c4,
    UC_none, 0},
   {"STABLE",                                concept_stable,                  D, l_c3a,
    UC_none, false, false},
   {"@6 ARE STABLE",                         concept_so_and_so_stable,      F+D, l_c3a,
    UC_none, true,  false},
   {"@b STABLE",                             concept_frac_stable,             D, l_c4,
    UC_none, false, true},
   {"@6 ARE @b STABLE",                      concept_so_and_so_frac_stable, F+D, l_c4,
    UC_none, true,  true},
   {"@h NOSE",                               concept_nose,                    D, l_c4,
    UC_none, false, false},
   {"@6 ARE @h NOSE",                        concept_so_and_so_nose,        F+D, l_c4,
    UC_none, true,  false},
   {"EMULATE",                               concept_emulate,                 D, l_c4,
    UC_none},
   {"MIMIC @6",                              concept_mimic,                 F+D, l_c4,
    UC_none, 0},
   {"MIMIC @6 OF LINES",                     concept_mimic,                 F+D, l_c4,
    UC_none, MIMIC_SETUP_LINES},
   {"MIMIC @6 OF COLUMNS",                   concept_mimic,                 F+D, l_c4,
    UC_none, MIMIC_SETUP_COLUMNS},
   {"MIMIC @6 OF WAVES",                     concept_mimic,                 F+D, l_c4,
    UC_none, MIMIC_SETUP_WAVES},
   {"MIMIC @6 OF BOXES",                     concept_mimic,                 F+D, l_c4,
    UC_none, MIMIC_SETUP_BOXES},
   {"TRACE",                                 concept_trace,                   0, l_c4,
    UC_none},
   {"OUTERACTING",                           concept_outeracting,             D, l_c4,
    UC_none},
   {"STRETCH",                               concept_old_stretch,             D, l_c1,
    UC_none},
   {"STRETCHED SETUP",                       concept_new_stretch,             D, l_c2,
    UC_none, 16},
   {"STRETCHED BOX",                         concept_new_stretch,             D, l_c2,
    UC_none, 18},
   {"STRETCHED LINE",                        concept_new_stretch,             D, l_c2,
    UC_none, 1},
   {"STRETCHED WAVE",                        concept_new_stretch,             D, l_c2,
    UC_none, 3},
   {"STRETCHED COLUMN",                      concept_new_stretch,             D, l_c2,
    UC_none, 4},
   {"STRETCHED DIAMOND",                     concept_new_stretch,             D, l_c3a,
    UC_none, 19},
   {"STRETCHED 1/4 TAG",                     concept_new_stretch,             D, l_c3a,
    UC_none, 19},
   {"STRETCHED",                             concept_new_stretch,             D, l_c3a,
    UC_none, 20},
   {"FERRIS",                                concept_ferris,                  D, l_c3x,
    UC_none, 0, 0},
   {"RELEASE",                               concept_ferris,                  D, l_c3a,
    UC_none, 1, /*CONCPROP__NEEDK_3X4*/0},
   {"CENTERS AND ENDS",                      concept_centers_and_ends,        0, l_mainstream,
    UC_none, selector_centers, false},
   {"CENTER 6/OUTER 2",                      concept_centers_and_ends,        0, l_mainstream,
    UC_none, selector_center6, false},
   {"CENTER 2/OUTER 6",                      concept_centers_and_ends,        0, l_mainstream,
    UC_none, selector_center2, false},
   {"ENDS CONCENTRIC",                       concept_centers_or_ends,         D, l_c1,
    UC_none, selector_ends,    true},
   {"OUTER 2 CONCENTRIC",                    concept_centers_or_ends,         D, l_c1,
    UC_none, selector_outer2,  true},
   {"OUTER 6 CONCENTRIC",                    concept_centers_or_ends,         D, l_c1,
    UC_none, selector_outer6,  true},
   {"CENTERS AND ENDS CONCENTRIC",           concept_centers_and_ends,        0, l_c1,
    UC_none, selector_centers, true},
   {"CHECKPOINT",                            concept_checkpoint,              0, l_c2,
    UC_none, 0},
   {"REVERSE CHECKPOINT",                    concept_checkpoint,              0, l_c3,
    UC_none, 1},
   {"CHECKERBOARD",                          concept_checkerboard,            D, l_c3a,
    UC_none, s1x4, 0},
   {"CHECKERBOX",                            concept_checkerboard,            D, l_c3a,
    UC_none, s2x2, 0},
   {"CHECKERDIAMOND",                        concept_checkerboard,            D, l_c4a,
    UC_none, sdmd, 0},
   {"@6 PREFERRED FOR TRADE, CHECKERBOARD",  concept_sel_checkerboard,        D, l_c3a,
    UC_none, s1x4, 8},
   {"@6 PREFERRED FOR TRADE, CHECKERBOX",    concept_sel_checkerboard,        D, l_c3a,
    UC_none, s2x2, 8},
   {"@6 PREFERRED FOR TRADE, CHECKERDIAMOND",concept_sel_checkerboard,        D, l_c4a,
    UC_none, sdmd, 8},
   {"ORBITBOARD",                            concept_checkerboard,            D, l_c4,
    UC_none, s1x4, 2},
   {"ORBITBOX",                              concept_checkerboard,            D, l_c4,
    UC_none, s2x2, 2},
   {"ORBITDIAMOND",                          concept_checkerboard,            D, l_c4,
    UC_none, sdmd, 2},
   {"LEFT ORBITBOARD",                       concept_checkerboard,            D, l_c4,
    UC_none, s1x4, 4},
   {"LEFT ORBITBOX",                         concept_checkerboard,            D, l_c4,
    UC_none, s2x2, 4},
   {"LEFT ORBITDIAMOND",                     concept_checkerboard,            D, l_c4,
    UC_none, sdmd, 4},
   {"TWIN ORBITBOARD",                       concept_checkerboard,            D, l_c4,
    UC_none, s1x4, 3},
   {"TWIN ORBITBOX",                         concept_checkerboard,            D, l_c4,
    UC_none, s2x2, 3},
   {"TWIN ORBITDIAMOND",                     concept_checkerboard,            D, l_c4,
    UC_none, sdmd, 3},
   {"SHADOW LINE",                           concept_checkerboard,            D, l_c4a,
    UC_none, s1x4, 1},
   {"SHADOW BOX",                            concept_checkerboard,            D, l_c4a,
    UC_none, s2x2, 1},
   {"SHADOW DIAMOND",                        concept_checkerboard,            D, l_c4a,
    UC_none, sdmd, 1},
   {"ANCHOR THE @6",                         concept_anchor,                F+D, l_c4,
    UC_none},
   {"@6",                                    concept_so_and_so_only,        Y+D, l_mainstream,
    UC_none, selective_key_plain, 0, 0},
   {"@6 (while the others)",                 concept_some_vs_others,          0, l_mainstream,
    UC_none, selective_key_plain, 1, 0},
   {"@6 DISCONNECTED",                       concept_so_and_so_only,          D, l_c2,
    UC_none, selective_key_disc_dist, 0, 0},
   {"@6 DISCONNECTED (while the others)",    concept_some_vs_others,          0, l_c2,
    UC_none, selective_key_disc_dist, 1, 0},
   {"SAME SEX DISCONNECTED",                 concept_same_sex_disconnected,   D, l_c2,
    UC_none, selective_key_disc_dist, 9, 0},
   {"@6 DO YOUR PART",                       concept_so_and_so_only,        F+D, l_mainstream,
    UC_none, selective_key_dyp, 0, 0},
   {"@6 DO YOUR PART (while the others)",    concept_some_vs_others,          F, l_mainstream,
    UC_none, selective_key_dyp, 1, 0},
   {"ON YOUR OWN",                           concept_on_your_own,             0, l_c4a,
    UC_none},
   {"OWN THE @6",                            concept_some_vs_others,          F, l_c3a,
    UC_none, selective_key_own, 1, 0},
   {"IGNORE THE @6",                         concept_so_and_so_only,        F+D, l_c1,
    UC_none, selective_key_ignore, 0, 0},
   {"@K WORK",                               concept_so_and_so_only,        L+D, l_c1,
    UC_none, selective_key_work_concept, 1, 0},
   {"@6 LEAD FOR A",                         concept_so_and_so_only,          D, l_mainstream,
    UC_none, selective_key_lead_for_a, 0, 0},
   {"PROMENADE, @6 LEAD FOR A",              concept_so_and_so_only,          D, l_mainstream,
    UC_none, selective_key_promenade_and_lead_for_a, 0, 0},
   {"@6 MOVE IN AND",                        concept_move_in_and,             D, l_mainstream,
    UC_none},
   {"two calls in succession",               concept_sequential,              0, l_mainstream,
    UC_none},
   {"FOLLOW IT BY",                          concept_special_sequential,      0, l_c2,
    UC_none, part_key_follow_by},
   {"PRECEDE IT BY",                         concept_special_sequential,      0, l_c2,
    UC_none, part_key_precede_by},
   {"ADD",                                   concept_special_sequential,      0, l_c2,
    UC_none, part_key_follow_by},
   {"USE",                                   concept_special_sequential,      0, l_c2,
    UC_none, part_key_use},
   {"CRAZY",                                 concept_crazy,                   D, l_c2,
    UC_none, 0, 0, 0},
   {"REVERSE CRAZY",                         concept_crazy,                   D, l_c2,
    UC_none, 1, 0, 0},
   {"@a CRAZY",                              concept_frac_crazy,              D, l_c2,
    UC_none, 0, 1, 0},
   {"@a REVERSE CRAZY",                      concept_frac_crazy,              D, l_c2,
    UC_none, 1, 1, 0},
   {"@9/@9 CRAZY",                           concept_dbl_frac_crazy,          D, l_c2,
    UC_none, 0, 2, 0},
   {"@9/@9 REVERSE CRAZY",                   concept_dbl_frac_crazy,          D, l_c2,
    UC_none, 1, 2, 0},
   {"RANDOM",                                concept_meta,                  G+D, l_c3x,
    UC_none, meta_key_random},
   {"REVERSE RANDOM",                        concept_meta,                  G+D, l_c3x,
    UC_none, meta_key_rev_random},
   {"ODDLY",                                 concept_meta,                  G+D, l_c3,
    UC_none, meta_key_random},
   {"EVENLY",                                concept_meta,                  G+D, l_c3,
    UC_none, meta_key_rev_random},
   {"PIECEWISE",                             concept_meta,                  G+D, l_c4,
    UC_none, meta_key_piecewise},
   {"@9/@9",                                 concept_fractional,            F+D, l_mainstream,
    UC_none, 0},
   {"1-@9/@9",                               concept_fractional,            F+D, l_mainstream,
    UC_none, 2},
   {"TWICE",                                 concept_n_times_const,         F+D, l_mainstream,
    UC_none, 0, 2},
   {"THRICE",                                concept_n_times_const,         F+D, l_mainstream,
    UC_none, 0, 3},
   {"@9 TIMES",                              concept_n_times,               F+D, l_mainstream,
    UC_none, 1},
   {"DO THE LAST @9/@9",                     concept_fractional,            F+D, l_mainstream,
    UC_none, 1},
   {"REVERSE ORDER",                         concept_meta,                    D, l_mainstream,
    UC_none, meta_key_revorder},
   {"INTERLACE",                             concept_interlace,               0, l_c3x,
    UC_none},
   {"ROUNDTRIP",                             concept_meta,                    D, l_c4,
    UC_none, meta_key_roundtrip},
   {"FINISH",                                concept_meta,                    D, l_c1,
    UC_none, meta_key_finish},
   {"LIKE A",                                concept_meta,                    D, l_c1,
    UC_none, meta_key_like_a},
   {"LIKE AN",                               concept_meta,                    D, l_c1,
    UC_none, meta_key_like_a},
   {"ECHO",                                  concept_meta,                  G+D, l_c3,
    UC_none, meta_key_echo, 1},
   {"REVERSE ECHO",                          concept_meta,                  G+D, l_c4,
    UC_none, meta_key_rev_echo, 1},
   {"DOUBLE ECHO",                           concept_meta,                  G+D, l_c4,
    UC_none, meta_key_echo, 2},
   {"TRIPLE ECHO",                           concept_meta,                  G+D, l_c4,
    UC_none, meta_key_echo, 3},
   {"QUADRUPLE ECHO",                        concept_meta,                  G+D, l_c4,
    UC_none, meta_key_echo, 4},
   {"SHIFTY",                                concept_meta,                    D, l_c4,
    UC_none, meta_key_shift_n, 1},
   {"SHIFT @9",                              concept_meta_one_arg,          F+D, l_c4,
    UC_none, meta_key_shift_n},
   {"SHIFT 1/2",                             concept_meta,                  F+D, l_c4,
    UC_none, meta_key_shift_half, 0},
   {"SHIFT @9-1/2",                          concept_meta_one_arg,          F+D, l_c4,
    UC_none, meta_key_shift_half},
   {"@6 START",                              concept_so_and_so_begin,       F+D, l_c1,
    UC_none, 0},
   {"INITIALLY",                             concept_meta,                  G+D, l_c3a,
    UC_none, meta_key_nth_part_work, 1},
   {"FINALLY",                               concept_meta,                  G+D, l_c3a,
    UC_none, meta_key_finally},
   {"INITIALLY AND FINALLY",                 concept_meta,                  G+D, l_c3a,
    UC_none, meta_key_initially_and_finally},
   {"SECONDLY",                              concept_meta,                  L+D, l_c3,
    UC_none, meta_key_nth_part_work, 2},
   {"THIRDLY",                               concept_meta,                  L+D, l_c3,
    UC_none, meta_key_nth_part_work, 3},
   {"FOURTHLY",                              concept_meta,                  L+D, l_c3,
    UC_none, meta_key_nth_part_work, 4},
   {"FIFTHLY",                               concept_meta,                  L+D, l_c3,
    UC_none, meta_key_nth_part_work, 5},
   {"FIRST @9/@9",                           concept_meta_two_args,         L+D, l_c3,
    UC_none, meta_key_first_frac_work, 0},
   {"MIDDLE @9/@9",                          concept_meta_two_args,         L+D, l_c3,
    UC_none, meta_key_first_frac_work, 2},
   {"LAST @9/@9",                            concept_meta_two_args,         L+D, l_c3,
    UC_none, meta_key_first_frac_work, 1},
   {"HALFWAY",                               concept_meta,                  L+D, l_c4,
    UC_none, meta_key_first_frac_work, 3},
   {"DO THE @u PART",                        concept_meta_one_arg,          L+D, l_c1,
    UC_none, meta_key_nth_part_work},
   {"DO THE LAST PART",                      concept_meta,                  G+D, l_c1,
    UC_none, meta_key_finally},
   {"USE FOR THE @u PART",                   concept_special_sequential_num,  0, l_c1,
    UC_none, part_key_use_nth_part},
   {"USE FOR THE LAST PART",                 concept_special_sequential,      0, l_c1,
    UC_none, part_key_use_last_part},
   {"REPLACE THE @u PART",                   concept_replace_nth_part,        0, l_c1,
    UC_none, 8},
   {"REPLACE THE LAST PART",                 concept_replace_last_part,       0, l_c1,
    UC_none, 0},
   {"SKIP THE @u PART",                      concept_meta_one_arg,          F+D, l_c1,
    UC_none, meta_key_skip_nth_part},
   {"SKIP THE LAST PART",                    concept_meta,                  F+D, l_c1,
    UC_none, meta_key_skip_last_part},
   {"START WITH",                            concept_special_sequential,      0, l_c2,
    UC_none, part_key_start_with},
   {"HALF AND HALF",                         concept_special_sequential,      0, l_c4,
    UC_none, part_key_half_and_half},
   {"@9/@9 AND @9/@9",                       concept_special_sequential_4num, 0, l_c4,
    UC_none, part_key_frac_and_frac},
   {"INTERRUPT AFTER THE @u PART",           concept_replace_nth_part,        0, l_c1,
    UC_none, 9},
   {"INTERRUPT BEFORE THE LAST PART",        concept_replace_last_part,       0, l_c1,
    UC_none, 1},
   {"INTERRUPT AFTER @9/@9",                 concept_interrupt_at_fraction,   0, l_c1,
    UC_none, 2},
   {"SANDWICH",                              concept_sandwich,                0, l_c4,
    UC_none, 3},
   {"OMIT",                                  concept_omit,                    D, l_c3,
    UC_none},
   {"IN A 1/4 TAG",                          concept_tandem_in_setup,         D, l_c3,
    UC_none, CMD_MISC__VERIFY_REAL_1_4_TAG,  CONCPROP__NEEDK_4DMD},
   {"IN A 3/4 TAG",                          concept_tandem_in_setup,         D, l_c3,
    UC_none, CMD_MISC__VERIFY_REAL_3_4_TAG,  CONCPROP__NEEDK_4DMD},
   {"IN A 1/4 LINE",                         concept_tandem_in_setup,         D, l_c3,
    UC_none, CMD_MISC__VERIFY_REAL_1_4_LINE, CONCPROP__NEEDK_4DMD},
   {"IN A 3/4 LINE",                         concept_tandem_in_setup,         D, l_c3,
    UC_none, CMD_MISC__VERIFY_REAL_3_4_LINE, CONCPROP__NEEDK_4DMD},
   {"IN POINT-TO-POINT DIAMONDS",            concept_tandem_in_setup,         D, l_c3,
    UC_none, 0, CONCPROP__NEEDK_DBLX},
   {"IN A TALL 6",                           concept_tandem_in_setup,         D, l_c3,
    UC_none, CMD_MISC__VERIFY_TALL6, CONCPROP__NEEDK_DEEPXWV},
   {"IN A TIDAL LINE",                       concept_tandem_in_setup,         D, l_c3,
    UC_none, CMD_MISC__VERIFY_LINES, CONCPROP__NEEDK_1X16},
   {"IN A TIDAL COLUMN",                     concept_tandem_in_setup,         D, l_c3,
    UC_none, CMD_MISC__VERIFY_COLS, CONCPROP__NEEDK_2X8},
   {"INSIDE TRIANGLES",                      concept_randomtrngl,             D, l_c1,
    UC_none, 2},
   {"INSIDE INTERLOCKED TRIANGLES",          concept_randomtrngl,             D, l_c2,
    UC_none, 0102},
   {"OUTSIDE INTERLOCKED TRIANGLES",         concept_randomtrngl,             D, l_c2,
    UC_none, 0103},
   {"OUTSIDE TRIANGLES",                     concept_randomtrngl,             D, l_c1,
    UC_none, 3},
   {"IN POINT TRIANGLES",                    concept_randomtrngl,             D, l_c1,
    UC_none, 5},
   {"IN POINT INTERLOCKED TRIANGLES",        concept_randomtrngl,             D, l_c2,
    UC_none, 0105},
   {"OUT POINT TRIANGLES",                   concept_randomtrngl,             D, l_c1,
    UC_none, 4},
   {"OUT POINT INTERLOCKED TRIANGLES",       concept_randomtrngl,             D, l_c2,
    UC_none, 0104},
   {"TALL 6",                                concept_randomtrngl,             D, l_c4a,
    UC_none, 0},
   {"SHORT 6",                               concept_randomtrngl,             D, l_c4a,
    UC_none, 1},
   {"WAVE-BASED TRIANGLES",                  concept_randomtrngl,             D, l_c1,
    UC_none, 6},
   {"TANDEM-BASED TRIANGLES",                concept_randomtrngl,             D, l_c1,
    UC_none, 7},
   {"@k-BASED TRIANGLES",                    concept_selbasedtrngl,           D, l_c1,
    UC_none, 20},
   {"MINI-BUTTERFLY",                        concept_mini_but_o,              D, l_c3,
    UC_none, 0},
   {"MINI-O",                                concept_mini_but_o,              D, l_c3,
    UC_none, 1},
   {"CONCENTRIC",                            concept_concentric,              D, l_c1,
    UC_none, schema_concentric, 0, 0},
   {"CROSS CONCENTRIC",                      concept_concentric,              D, l_c2,
    UC_none, schema_cross_concentric, 0, 0},
   {"SINGLE CONCENTRIC",                     concept_concentric,              D, l_c4,
    UC_none, schema_single_concentric, 0, 0},
   {"SINGLE CROSS CONCENTRIC",               concept_concentric,              D, l_c4,
    UC_none, schema_single_cross_concentric, 0, 0},
   {"GRAND SINGLE CONCENTRIC",               concept_concentric,              D, l_c4,
    UC_none, schema_grand_single_concentric, 0, 0},
   {"GRAND SINGLE CROSS CONCENTRIC",         concept_concentric,              D, l_c4,
    UC_none, schema_grand_single_cross_concentric, 0, 0},
   {"3X3 CONCENTRIC",                        concept_concentric,              D, l_c4,
    UC_none, schema_3x3k_concentric, 0, 0},
   {"3X3 CROSS CONCENTRIC",                  concept_concentric,              D, l_c4,
    UC_none, schema_3x3k_cross_concentric, 0, 0},
   {"4X4 CONCENTRIC",                        concept_concentric,              D, l_c4,
    UC_none, schema_4x4k_concentric, 0, 0},
   {"4X4 CROSS CONCENTRIC",                  concept_concentric,              D, l_c4,
    UC_none, schema_4x4k_cross_concentric, 0, 0},
   {"CONCENTRIC TRIPLE BOXES",               concept_multiple_boxes,          D, l_c4a,
    UC_none, 0, CONCPROP__NEEDK_2X6, 0, 3, MPKIND__CONCPHAN},
   {"CONCENTRIC QUADRUPLE BOXES",            concept_multiple_boxes,          D, l_c4a,
    UC_none, 0, CONCPROP__NEEDK_2X8, 0, 4, MPKIND__CONCPHAN},
   {"CONCENTRIC DIAMONDS",                   concept_concentric,              D, l_c1,
    UC_none, schema_concentric_diamonds, 0, CMD_MISC__VERIFY_DMD_LIKE},
   {"CROSS CONCENTRIC DIAMONDS",             concept_concentric,              D, l_c2,
    UC_none, schema_cross_concentric_diamonds, 0, CMD_MISC__VERIFY_DMD_LIKE},
   {"CONCENTRIC Z's",                        concept_concentric,              D, l_c3a,
    UC_none, schema_concentric_zs, 0, 0},
   {"CROSS CONCENTRIC Z's",                  concept_concentric,              D, l_c3a,
    UC_none, schema_cross_concentric_zs, 0, 0},
   {"MIDDLE (INTERMEDIATE) DIAMOND",         concept_concentric,              D, l_plus,
    UC_none, schema_intermediate_diamond, 0, 0},
   {"OUTSIDE DIAMOND",                       concept_concentric,              D, l_plus,
    UC_none, schema_outside_diamond, 0, 0},
   {"GRAND WORKING FORWARD",                 concept_grand_working,           D, l_c4a,
    UC_none, 0},
   {"GRAND WORKING BACKWARD",                concept_grand_working,           D, l_c4a,
    UC_none, 2},
   {"GRAND WORKING LEFT",                    concept_grand_working,           D, l_c4a,
    UC_none, 1},
   {"GRAND WORKING RIGHT",                   concept_grand_working,           D, l_c4a,
    UC_none, 3},
   {"GRAND WORKING AS CENTERS",              concept_grand_working,           D, l_c4a,
    UC_none, 10},
   {"GRAND WORKING AS ENDS",                 concept_grand_working,           D, l_c4a,
    UC_none, 11},
   {"GRAND WORKING CLOCKWISE",               concept_grand_working,           D, l_c4a,
    UC_none, 8},
   {"GRAND WORKING COUNTERCLOCKWISE",        concept_grand_working,           D, l_c4a,
    UC_none, 9},
   {"@6 ARE CENTERS OF A DOUBLE-OFFSET 1/4 TAG",concept_double_offset,        D, l_c4,
    UC_none, 0},
   {"@6 ARE CENTERS OF A DOUBLE-OFFSET 3/4 TAG",concept_double_offset,        D, l_c4,
    UC_none, 1},
   {"@6 ARE CENTERS OF A DOUBLE-OFFSET 1/4 LINE",concept_double_offset,       D, l_c4,
    UC_none, 2},
   {"@6 ARE CENTERS OF A DOUBLE-OFFSET 3/4 LINE",concept_double_offset,       D, l_c4,
    UC_none, 3},
   {"@6 ARE CENTERS OF A DOUBLE-OFFSET GENERAL 1/4 TAG",concept_double_offset,D, l_c4,
    UC_none, 4},
   {"@6 ARE CENTERS OF DOUBLE-OFFSET DIAMONDS",concept_double_offset,         D, l_c4,
    UC_none, 5},
   {"@6 ARE CENTERS OF DOUBLE-OFFSET DIAMOND SPOTS",concept_double_offset,    D, l_c4,
    UC_none, 6},
   {"INRIGGER",                              concept_rigger,                  D, l_c4a,
    UC_none, 2},
   {"OUTRIGGER",                             concept_rigger,                  D, l_c4a,
    UC_none, 0},
   {"LEFTRIGGER",                            concept_rigger,                  D, l_c4a,
    UC_none, 1},
   {"RIGHTRIGGER",                           concept_rigger,                  D, l_c4a,
    UC_none, 3},
   {"BACKRIGGER",                            concept_rigger,                  D, l_c4a,
    UC_none, 16},
   {"FRONTRIGGER",                           concept_rigger,                  D, l_c4a,
    UC_none, 18},
   {"RIGHT WING",                            concept_wing,                    D, l_c4,
    UC_none, 0},
   {"LEFT WING",                             concept_wing,                    D, l_c4,
    UC_none, 1},
   {"MYSTIC WING",                           concept_wing,                    D, l_c4,
    UC_none, 2},
   {"OTHER WING",                            concept_wing,                    D, l_c4,
    UC_none, 4},
   {"COMMON SPOT GALAXY",                    concept_common_spot,             D, l_c4,
    UC_none, 1, 0},
   {"COMMON POINT GALAXY",                   concept_common_spot,             D, l_c4,
    UC_none, 1, 0},
   {"COMMON SPOT COLUMNS",                   concept_common_spot,             D, l_c4,
    UC_none, 2, 0},
   {"COMMON POINT DIAMONDS",                 concept_common_spot,             D, l_c4,
    UC_none, 0x4, 0},
   {"COMMON SPOT DIAMONDS",                  concept_common_spot,             D, l_c4,
    UC_none, 0x804, 0},
   {"COMMON SPOT POINT-TO-POINT DIAMONDS",   concept_common_spot,             D, l_c4,
    UC_none, 0x400, 0},
   {"COMMON POINT HOURGLASS",                concept_common_spot,             D, l_c4,
    UC_none, 0x80, 0},
   {"COMMON SPOT HOURGLASS",                 concept_common_spot,             D, l_c4,
    UC_none, 0x80, 0},
   {"COMMON END LINES",                      concept_common_spot,             D, l_c4,
    UC_none, 0x10, 0},
   {"COMMON END WAVES",                      concept_common_spot,             D, l_c4,
    UC_none, 0x10, CMD_MISC__VERIFY_WAVES},
   {"COMMON CENTER LINES",                   concept_common_spot,             D, l_c4,
    UC_none, 0x20, 0},
   {"COMMON CENTER WAVES",                   concept_common_spot,             D, l_c4,
    UC_none, 0x20, CMD_MISC__VERIFY_WAVES},
   {"COMMON SPOT LINES",                     concept_common_spot,             D, l_c4,
    UC_none, 0x78, 0},
   {"COMMON SPOT WAVES",                     concept_common_spot,             D, l_c4,
    UC_none, 0x70, CMD_MISC__VERIFY_WAVES},
   {"COMMON SPOT TWO-FACED LINES",           concept_common_spot,             D, l_c4,
    UC_none, 8,   CMD_MISC__VERIFY_2FL},
   {"COMMON SPOT 1/4 TAGS",                  concept_common_spot,             D, l_c4,
    UC_none, 0x200, 0},
   {"COMMON SPOT 1/4 LINES",                 concept_common_spot,             D, l_c4,
    UC_none, 0x100, 0},
   {"1X2",                                   concept_1x2,                   L+D, l_c3,
    UC_none},
   {"2X1",                                   concept_2x1,                   L+D, l_c3,
    UC_none},
   {"2X2",                                   concept_2x2,                   L+D, l_c3a,
    UC_none},
   {"1X3",                                   concept_1x3,                   L+D, l_c2,
    UC_none},
   {"3X1",                                   concept_3x1,                   L+D, l_c2,
    UC_none},
   {"0X3",                                   concept_0x3,                   L+D, l_c4,
    UC_none},
   {"3X0",                                   concept_3x0,                   L+D, l_c4,
    UC_none},
   {"0X4",                                   concept_0x4,                   L+D, l_c4,
    UC_none},
   {"4X0",                                   concept_4x0,                   L+D, l_c4,
    UC_none},
   {"6X2",                                   concept_6x2,                   L+D, l_a1,
    UC_none},
   {"3X2",                                   concept_3x2,                   L+D, l_c1,
    UC_none},
   {"3X3",                                   concept_3x3,                   L+D, l_c4a,
    UC_3x3},
   {"4X4",                                   concept_4x4,                   L+D, l_c4a,
    UC_4x4},
   {"5X5",                                   concept_5x5,                   L+D, l_c4a,
    UC_none},
   {"6X6",                                   concept_6x6,                   L+D, l_c4a,
    UC_none},
   {"7X7",                                   concept_7x7,                   L+D, l_c4a,
    UC_none},
   {"8X8",                                   concept_8x8,                   L+D, l_c4a,
    UC_none},
   {"ALL 4 COUPLES",                         concept_all_8,                   D, l_a2,
    UC_none, 0},
   {"ALL 8",                                 concept_all_8,                   D, l_a2,
    UC_none, 1},
   {"ALL 8 (diamonds)",                      concept_all_8,                   D, l_a2,
    UC_none, 2},
   {"REVERT",                                concept_revert,                L+D, l_c4a,
    UC_none, INHERITFLAGRVRTK_REVERT},
   {"REFLECTED",                             concept_revert,                L+D, l_c3,
    UC_none, INHERITFLAGRVRTK_REFLECT},
   {"REVERT AND THEN REFLECT",               concept_revert,                L+D, l_c3x,
    UC_none, INHERITFLAGRVRTK_RVF},
   {"REFLECT AND THEN REVERT",               concept_revert,                L+D, l_c3x,
    UC_none, INHERITFLAGRVRTK_RFV},
   {"REVERT, THEN REFLECT, THEN REVERT",     concept_revert,                L+D, l_c3x,
    UC_none, INHERITFLAGRVRTK_RVFV},
   {"REFLECT, THEN REVERT, THEN REFLECT",    concept_revert,                L+D, l_c3x,
    UC_none, INHERITFLAGRVRTK_RFVF},
   {"FAST",                                  concept_fast,                  L+D, l_c4,
    UC_none},
   {"CENTERS",                               concept_centers_or_ends,         D, l_mainstream,
    UC_none, selector_centers, false},
   {"ENDS",                                  concept_centers_or_ends,         D, l_mainstream,
    UC_none, selector_ends, false},
   {"EACH 1X4",                              concept_each_1x4,                D, l_mainstream,
    UC_none, 0, 0},
   {"EACH LINE",                             concept_each_1x4,                D, l_mainstream,
    UC_none, 1, 0},
   {"EACH COLUMN",                           concept_each_1x4,                D, l_mainstream,
    UC_none, 2, 0},
   {"EACH WAVE",                             concept_each_1x4,                D, l_mainstream,
    UC_none, 3, 0},
   {"EACH BOX",                              concept_each_1x4,                D, l_mainstream,
    UC_none, 0, 2},
   {"EACH DIAMOND",                          concept_each_1x4,                D, l_mainstream,
    UC_none, 0, 1},
   {"1x10 MATRIX",                           concept_create_matrix,           D, l_c3x,
    UC_none, s1x10, CONCPROP__NEEDK_1X10},
   {"1X12 MATRIX",                           concept_create_matrix,           D, l_c3x,
    UC_none, s1x12, CONCPROP__NEEDK_1X12},
   {"1X16 MATRIX",                           concept_create_matrix,           D, l_c3x,
    UC_none, s1x16, CONCPROP__NEEDK_1X16},
   {"2X5 MATRIX",                            concept_create_matrix,           D, l_c3x,
    UC_none, s2x5,  0},  /* If it isn't already in a 2x5, we lose. */
   {"2X6 MATRIX",                            concept_create_matrix,           D, l_c3x,
    UC_none, s2x6,  CONCPROP__NEEDK_2X6},
   {"2X8 MATRIX",                            concept_create_matrix,           D, l_c3x,
    UC_2x8matrix, s2x8,  CONCPROP__NEEDK_2X8},
   {"2X10 MATRIX",                           concept_create_matrix,           D, l_c3x,
    UC_none, s2x10,  CONCPROP__NEEDK_2X10},
   {"2X12 MATRIX",                           concept_create_matrix,           D, l_c3x,
    UC_none, s2x12,  CONCPROP__NEEDK_2X12},
   {"3X4 MATRIX",                            concept_create_matrix,           D, l_c3x,
    UC_none, s3x4,  CONCPROP__NEEDK_3X4},
   {"4X4 MATRIX",                            concept_create_matrix,           D, l_c3x,
    UC_none, s4x4,  CONCPROP__NEEDK_4X4},
   {"4X5 MATRIX",                            concept_create_matrix,           D, l_c3x,
    UC_none, s4x5,  CONCPROP__NEEDK_4X5},
   {"3X6 MATRIX",                            concept_create_matrix,           D, l_c3x,
    UC_none, s3x6,  CONCPROP__NEEDK_3X6},
   {"3X8 MATRIX",                            concept_create_matrix,           D, l_c3x,
    UC_none, s3x8,  CONCPROP__NEEDK_3X8},
   {"4X6 MATRIX",                            concept_create_matrix,           D, l_c3x,
    UC_none, s4x6,  CONCPROP__NEEDK_4X6},
   {"16 MATRIX OF PARALLEL DIAMONDS",        concept_create_matrix,           D, l_c3x,
    UC_none, s4dmd, CONCPROP__NEEDK_4D_4PTPD},
   {"OFFSET TRIPLE BOXES",                   concept_distorted,               D, l_c4a,
    UC_none, disttest_offset, CONCPROP__NEEDK_2X8, 0, DISTORTKEY_OFFS_TRIPLE_BOX*16+0},
   {"OFFSET TRIPLE BOXES WORKING TOGETHER",  concept_offset_triple_boxes_tog, D, l_c4a,
    UC_none, 6, 0},
   {"OFFSET TRIPLE BOXES WORKING APART",     concept_offset_triple_boxes_tog, D, l_c4a,
    UC_none, 7, 0},
   {"OFFSET TRIPLE BOXES WORKING FORWARD",   concept_offset_triple_boxes_tog, D, l_c4a,
    UC_none, 0, 0},
   {"OFFSET TRIPLE BOXES WORKING BACKWARD",  concept_offset_triple_boxes_tog, D, l_c4a,
    UC_none, 2, 0},
   {"OFFSET TRIPLE BOXES WORKING RIGHT",     concept_offset_triple_boxes_tog, D, l_c4a,
    UC_none, 3, 0},
   {"OFFSET TRIPLE BOXES WORKING LEFT",      concept_offset_triple_boxes_tog, D, l_c4a,
    UC_none, 1, 0},
   {"OFFSET TRIPLE BOXES WORKING CLOCKWISE", concept_offset_triple_boxes_tog, D, l_c4,
    UC_none, 8, 0},
   {"OFFSET TRIPLE BOXES WORKING COUNTERCLOCKWISE",concept_offset_triple_boxes_tog,D, l_c4,
    UC_none, 9, 0},
   {"OFFSET SPLIT PHANTOM BOXES",            concept_distorted,               D, l_c4,
    UC_none, disttest_offset, CONCPROP__NEEDK_3X8, 0, DISTORTKEY_OFFS_SPL_PHAN_BOX*16},
   {"DRAG THE @6",                           concept_drag,                  F+D, l_c4,
    UC_none},
   {"DIAGNOSE",                              concept_diagnose,                D, l_mainstream,
    UC_none},  // Only appears if "-diagnostic" given.
   {"???",                                   marker_end_of_list}};


const concept_fixer_thing concept_fixer_table[] = {
   {0, FINAL__SPLIT,      UC_pl, UC_spl},    // SPLIT + PHANTOM LINES
   {INHERITFLAG_INTLK, 0, UC_pl, UC_ipl},    // INTERLOCKED + PHANTOM LINES
   {0, FINAL__SPLIT,      UC_pw, UC_spw},    // SPLIT + PHANTOM WAVES
   {INHERITFLAG_INTLK, 0, UC_pw, UC_ipw},    // INTERLOCKED + PHANTOM WAVES
   {0, FINAL__SPLIT,      UC_pc, UC_spc},    // SPLIT + PHANTOM COLUMNS
   {INHERITFLAG_INTLK, 0, UC_pc, UC_ipc},    // INTERLOCKED + PHANTOM COLUMNS
   {0, FINAL__SPLIT,      UC_pb, UC_spb},    // SPLIT + PHANTOM BOXES
   {INHERITFLAG_INTLK, 0, UC_pb, UC_ipb},    // INTERLOCKED + PHANTOM BOXES
   {0, FINAL__SPLIT,      UC_pd, UC_spd},    // SPLIT + PHANTOM DIAMONDS
   {INHERITFLAG_INTLK, 0, UC_pd, UC_ipd},    // INTERLOCKED + PHANTOM DIAMONDS
   {0, FINAL__SPLIT,      UC_pds, UC_spds},  // SPLIT + PHANTOM DIAMOND SPOTS
   {INHERITFLAG_INTLK, 0, UC_pds, UC_ipds},  // INTERLOCKED + PHANTOM DIAMOND SPOTS
   {0, FINAL__SPLIT,      UC_p1, UC_sp1},    // SPLIT + PHANTOM 1/4 TAGS
   {INHERITFLAG_INTLK, 0, UC_p1, UC_ip1},    // INTERLOCKED + PHANTOM 1/4 TAGS
   {0, FINAL__SPLIT,      UC_p3, UC_sp3},    // SPLIT + PHANTOM 3/4 TAGS
   {INHERITFLAG_INTLK, 0, UC_p3, UC_ip3},    // INTERLOCKED + PHANTOM 3/4 TAGS
   {0, FINAL__SPLIT,      UC_pgt, UC_spgt},  // SPLIT + PHANTOM GENERAL 1/4 TAGS
   {INHERITFLAG_INTLK, 0, UC_pgt, UC_ipgt},  // INTERLOCKED + PHANTOM GENERAL 1/4 TAGS
   {0, 0, UC_none, UC_none}};

static const useful_concept_enum nice_setup_concept_4x4[] = {
   UC_spl,     // split phantom lines
   UC_ipl,     // interlocked phantom lines
   UC_qlwf,    // quadruple lines working forward
   UC_qlwb,    // quadruple lines working backward
   UC_spc,     // split phantom columns
   UC_ipc,     // interlocked phantom columns
   UC_qcwr,    // quadruple columns working right
   UC_qcwl,    // quadruple columns working left
   UC_pofl,    // phantom offset lines
   UC_pob,     // phantom "O" or butterfly
   UC_pofc,    // phantom offset columns
   UC_pibl,    // 4 phantom interlocked blocks

   /* We suspect that the following concepts are less useful than those above,
      because, unless people are situated in certain ways, they won't lead to
      *any* legal calls, and we're too lazy to look at the setup in more
      detail to decide whether they can be used.  Actually, the task of making
      searches restrict their attention to plausible things is very difficult.
      We accept the fact that most of the things we try are pointless. */

   UC_cpl,     // phantom as couples (of course, we will need to put in "phantom")
   UC_tnd,     // phantom tandem
   UC_4x4,     // 4x4
   UC_none};

static const useful_concept_enum nice_setup_concept_3x4[] = {
   UC_tl,      // triple lines
   UC_tc,      // triple columns
   UC_tlwf,    // triple lines working forward
   UC_tlwb,    // triple lines working backward
   UC_tcwr,    // triple columns working right
   UC_tcwl,    // triple columns working left
   UC_3x3,     // 3x3
   UC_none};

static const useful_concept_enum nice_setup_concept_2x8[] = {
   UC_spb,     // split phantom boxes
   UC_ipb,     // interlocked phantom boxes
   UC_qbwf,    // quadruple boxes working forward
   UC_qbwb,    // quadruple boxes working backward
   UC_qbwr,    // quadruple boxes working right
   UC_qbwl,    // quadruple boxes working left
   UC_qbwt,    // quadruple boxes working together
   UC_qbwa,    // quadruple boxes working apart
   UC_pl8,     // twin phantom tidal lines
   UC_pc8,     // twin phantom tidal columns
   // The less likely ones:
   UC_4x4,     // 4x4
   UC_cpl,     // (2x8 matrix) as couples
   UC_tnd,     // (2x8 matrix) tandem
   UC_cpl2s,   // (2x8 matrix) couples twosome
   UC_tnd2s,   // (2x8 matrix) tandem twosome
   UC_none};

static const useful_concept_enum nice_setup_concept_2x6[] = {
   UC_tb,      // triple boxes
   UC_tbwf,    // triple boxes working forward
   UC_tbwb,    // triple boxes working backward
   UC_tbwr,    // triple boxes working right
   UC_tbwl,    // triple boxes working left
   UC_tbwt,    // triple boxes working together
   UC_tbwa,    // triple boxes working apart
   UC_pl6,     // twin phantom lines of 6
   UC_pc6,     // twin phantom columns of 6
   UC_3x3,     // 3x3
   // Let's give these extra probability.
   UC_tb,      // triple boxes
   UC_tb,      // triple boxes
   UC_tbwt,    // triple boxes working together
   UC_tbwt,    // triple boxes working together
   // These are actually 2x8 concepts, but they could still be helpful.
   UC_spb,     // split phantom boxes
   UC_qbwt,    // quadruple boxes working together
   UC_pl8,     // twin phantom tidal lines
   UC_pc8,     // phantom tidal columns
   UC_none};

static const useful_concept_enum nice_setup_concept_1x12[] = {
   UC_tlwt,    // end-to-end triple lines working together
   UC_tlwa,    // end-to-end triple lines working apart
   UC_tcwt,    // end-to-end triple columns working together
   UC_tcwa,    // end-to-end triple columns working apart
   UC_none};

static const useful_concept_enum nice_setup_concept_1x16[] = {
   UC_spl,      // end-to-end split phantom lines
   UC_ipl,      // end-to-end interlocked phantom lines
   UC_qlwt,     // end-to-end quadruple lines working together
   UC_qlwa,     // end-to-end quadruple lines working apart
   UC_spc,      // end-to-end split phantom columns
   UC_ipc,      // end-to-end interlocked phantom columns
   UC_qcwt,     // end-to-end quadruple columns working together
   UC_qcwa,     // end-to-end quadruple columns working apart
   UC_none};

static const useful_concept_enum nice_setup_concept_3dmd[] = {
   UC_td,      // triple diamonds
   UC_tdwt,    // triple diamonds working together
   UC_none};

static const useful_concept_enum nice_setup_concept_4dmd[] = {
   UC_spd,     // split phantom diamonds
   UC_ipd,     // interlocked phantom diamonds
   UC_qd,      // quadruple diamonds
   UC_qdwt,    // quadruple diamonds working together
   UC_none};

static const useful_concept_enum nice_setup_concept_4x6[] = {
   UC_trtl,     // triple twin lines
   UC_trtc,     // triple twin columns
   UC_none};

static nice_setup_thing nice_setup_thing_4x4 = {
   nice_setup_concept_4x4,
   (useful_concept_enum *) 0,     /* Will be filled in during initialization. */
   sizeof(nice_setup_concept_4x4)};

static nice_setup_thing nice_setup_thing_3x4 = {
   nice_setup_concept_3x4,
   (useful_concept_enum *) 0,     /* Will be filled in during initialization. */
   sizeof(nice_setup_concept_3x4)};

static nice_setup_thing nice_setup_thing_2x8 = {
   nice_setup_concept_2x8,
   (useful_concept_enum *) 0,     /* Will be filled in during initialization. */
   sizeof(nice_setup_concept_2x8)};

static nice_setup_thing nice_setup_thing_2x6 = {
   nice_setup_concept_2x6,
   (useful_concept_enum *) 0,     /* Will be filled in during initialization. */
   sizeof(nice_setup_concept_2x6)};

static nice_setup_thing nice_setup_thing_1x12 = {
   nice_setup_concept_1x12,
   (useful_concept_enum *) 0,     /* Will be filled in during initialization. */
   sizeof(nice_setup_concept_1x12)};

static nice_setup_thing nice_setup_thing_1x16 = {
   nice_setup_concept_1x16,
   (useful_concept_enum *) 0,     /* Will be filled in during initialization. */
   sizeof(nice_setup_concept_1x16)};

static nice_setup_thing nice_setup_thing_3dmd = {
   nice_setup_concept_3dmd,
   (useful_concept_enum *) 0,     /* Will be filled in during initialization. */
   sizeof(nice_setup_concept_3dmd)};

static nice_setup_thing nice_setup_thing_4dmd = {
   nice_setup_concept_4dmd,
   (useful_concept_enum *) 0,     /* Will be filled in during initialization. */
   sizeof(nice_setup_concept_4dmd)};

static nice_setup_thing nice_setup_thing_4x6 = {
   nice_setup_concept_4x6,
   (useful_concept_enum *) 0,     /* Will be filled in during initialization. */
   sizeof(nice_setup_concept_4x6)};


/* This array tracks the enumeration "nice_start_kind". */
nice_setup_info_item nice_setup_info[] = {
   {s4x4,   &nice_setup_thing_4x4,  (useful_concept_enum *) 0, 0},
   {s3x4,   &nice_setup_thing_3x4,  (useful_concept_enum *) 0, 0},
   {s2x8,   &nice_setup_thing_2x8,  (useful_concept_enum *) 0, 0},
   {s2x6,   &nice_setup_thing_2x6,  (useful_concept_enum *) 0, 0},
   {s1x10,  &nice_setup_thing_1x12, (useful_concept_enum *) 0, 0},  /* Note overuse. */
   {s1x12,  &nice_setup_thing_1x12, (useful_concept_enum *) 0, 0},
   {s1x14,  &nice_setup_thing_1x16, (useful_concept_enum *) 0, 0},  /* Note overuse. */
   {s1x16,  &nice_setup_thing_1x16, (useful_concept_enum *) 0, 0},
   {s3dmd,  &nice_setup_thing_3dmd, (useful_concept_enum *) 0, 0},
   {s4dmd,  &nice_setup_thing_4dmd, (useful_concept_enum *) 0, 0},
   {s4x6,   &nice_setup_thing_4x6,  (useful_concept_enum *) 0, 0}
};
