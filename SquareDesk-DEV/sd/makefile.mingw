# Makefile for Sd/Sdtty for MingW (GCC on Windows).

# This gives the compiler name and any switches that it needs to make
# it operate the way we want (ANSI language, standards conformance,
# target hardware, etc.)
CC = g++ -static-libgcc -static-libstdc++

# This gives any "-D" switches that we always need to send to the compiler.
DEFS = -Wall -Wno-switch -Wno-uninitialized -Wno-char-subscripts

# This gives the optimization and/or debug info.  These flags presumably
# don't affect the semantics of the language and run-time environment, so you
# might reasonably want to change them to suit your taste.
# The options shown here have been chosen to optimize the program for
# production use.  Depending on your operating system, compiler, and debugger,
# this may compromise the ability to debug the program.  In this case, you may
# need to choose different options, typically "-g", for debugging.
# Consult your system, compiler, and debugger vendor for further information.
CDEBUGFLAGS = -O4

CFLAGS =$(CDEBUGFLAGS) $(DEFS)

# These are the library flags that we must use for the final bind of
# "sdtty".
SDTTY_LIBS = -L. -lsdlib
SD_LIBS = C:\MinGW\lib\libcomctl32.a -L. -lsdlib

SDLIB_OBJS = sdmain.o sdutil.o sdbasic.o sdinit.o \
             sdtables.o sdctable.o sdtop.o sdconcpt.o sdpreds.o \
             sdgetout.o sdmoves.o sdtand.o sdconc.o sdistort.o \
             mapcachefile.o sdpick.o sdsi.o sdmatch.o common.o

HFILES = sdui.h sd.h sdbase.h database.h paths.h mapcachefile.h sort.h \
             deploy.h resource.h sdprint.h

ICONS = sd.ico sdbg.ico sdbw.ico sdby.ico sdcpl.ico sdgy.ico sdry.ico sdtty.ico

SHORTCUTS = "Edit sd.ini.lnk" Faq.lnk "Release Notes.lnk" "SD couple.lnk" "SD hidecouple.lnk" "Sd manual.lnk" \
             "SD nocheckers.lnk" "SD plain.lnk" SD.lnk "SDTTY plain.lnk" SDTTY.lnk

MAKEFILES = makefile.linux32 makefile.linux64 \
            makefile.cygnus makefile.cygwin makefile.djgpp \
            makefile.mingw makefile.mac makefile.solaris

SDTTY_OBJS = sdui-tty.o sdui-wincon.o

SD_OBJS = sdprint.o sdui-win.o

MKCALLS_OBJS = mkcalls.o common.o

all: sdtty.exe sd.exe mkcalls.exe deploy.exe sd_calls.dat

libsdlib.a: sdlib.dll $(SDLIB_OBJS)

sdlib.dll: $(SDLIB_OBJS)
	$(CC) -shared -o sdlib.dll -Wl,--out-implib,libsdlib.a $(SDLIB_OBJS)
	strip sdlib.dll

sdres.o: sd.rc
	windres sd.rc sdres.o

deployres.o: deploy.rc
	windres deploy.rc deployres.o

sdttyres.o: sdtty.rc
	windres sdtty.rc sdttyres.o

mkcalls.exe: $(MKCALLS_OBJS)
	$(CC) -mconsole -o $@ $(MKCALLS_OBJS)
	strip mkcalls.exe

sdtty.exe: libsdlib.a sdlib.dll $(SDTTY_OBJS) sdttyres.o
	$(CC) -mconsole -o $@ $(SDTTY_OBJS) sdttyres.o $(SDTTY_LIBS)
	strip sdtty.exe

sd.exe: libsdlib.a sdlib.dll $(SD_OBJS) sdres.o
	$(CC) -mwindows -o $@ $(SD_OBJS) sdres.o $(SD_LIBS)
	strip sd.exe

deploy.exe:  deploy.o deployres.o
	$(CC) -mwindows -o $@ deploy.o deployres.o
	strip deploy.exe

sd_calls.dat: sd_calls.txt mkcalls.exe
	mkcalls

.SUFFIXES: .c .cpp

# Our general compile rule is for sdlib.
.c.o:
	$(CC) $(CFLAGS) -DSDLIB_EXPORTS -c $<

.cpp.o:
	$(CC) $(CFLAGS) -DSDLIB_EXPORTS -c $<

# The files for the top-level programs have explicit rules
# without "-DSDLIB_EXPORTS".

mkcalls.o: mkcalls.cpp
	$(CC) $(CFLAGS) -c $<

common.o: common.cpp
	$(CC) $(CFLAGS) -c $<

deploy.o: deploy.cpp
	$(CC) $(CFLAGS) -c $<

sdui-tty.o: sdui-tty.cpp
	$(CC) $(CFLAGS) -c $<

# There's a scan of "dialog_help_list" that gcc gets cranky about.  I'm too lazy to change it.
sdui-win.o: sdui-win.cpp
	$(CC) $(CFLAGS) -Wno-array-bounds -c $<

sdui-wincon.o: sdui-wincon.cpp
	$(CC) $(CFLAGS) -c $<

sdprint.o: sdprint.cpp
	$(CC) $(CFLAGS) -c $<

# Miscellaneous file dependencies.

sd.h sdui.h: sdbase.h database.h

mkcalls.o sdmain.o sdsi.o: paths.h

common.o mkcalls.o: database.h

sdinit.cpp: mapcachefile.h sort.h

sdui-win.o: sdprint.h

mapcachefile.cpp: mapcachefile.h

sdprint.o: sdprint.h

$(SDLIB_OBJS) $(SDTTY_OBJS): sdui.h sd.h database.h paths.h

clean::
	-del *.o deploy.exe sd.exe sdtty.exe mkcalls.exe sd_calls.dat \
               libsdlib.a sdlib.dll ..\sddoc\sd_source.zip

cleanup::
	-del *.o libsdlib.a

savesource::
	-del ..\sddoc\sd_source.zip
	zip ..\sddoc\sd_source $(SDLIB_OBJS:.o=.cpp) $(SDTTY_OBJS:.o=.cpp) \
               $(SD_OBJS:.o=.cpp) $(MKCALLS_OBJS:.o=.cpp) deploy.cpp $(HFILES) \
               sd.rc sdtty.rc deploy.rc sdui-ttu.cpp $(ICONS) $(SHORTCUTS) \
               sd.bmp $(MAKEFILES) sd_calls.txt db_doc.txt COPYING.txt
